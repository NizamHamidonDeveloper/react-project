{"version":3,"sources":["views/pages/Content/Folder.js","views/pages/Content.js"],"names":["Index","props","React","useState","headCells","setHeadCells","headMobileCells","setHeadMobileCells","searchValue","setSearchValue","searchCell","setSearchCell","displayInfo","setDisplayInfo","editCells","setEditCells","addCells","setAddCells","addCellsName","setAddCellsName","matches","useMediaQuery","theme","breakpoints","up","useEffect","id","numeric","disablePadding","label","name","Grid","Table","control","rowsPerPage","orderBy","data","child","addItemButton","addItemText","type","addItemIcon","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","a11yProps","state","handleChange","event","newValue","setState","classes","this","className","root","PageHeader","title","AppBar","component","secondaryBar","color","position","elevation","style","marginTop","Tabs","onChange","textColor","Tab","Contents","Component","withStyles","flexGrow","width","background","withTheme"],"mappings":"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","file":"static/js/12.d3c4447a.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Table from '../../../modules/components/Table'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport default function Index(props) {\r\n\r\n    const [headCells, setHeadCells] = React.useState([]);\r\n    const [headMobileCells, setHeadMobileCells] = React.useState([]);\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n    const [searchCell, setSearchCell] = React.useState([]);\r\n    const [displayInfo, setDisplayInfo] = React.useState([]);\r\n    const [editCells, setEditCells] = React.useState([]);\r\n    const [addCells, setAddCells] = React.useState([]);\r\n    const [addCellsName, setAddCellsName] = React.useState([]);\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n\r\n    useEffect(() => {\r\n\r\n        setHeadCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'total', numeric: true, disablePadding: false, label: 'Contains' },\r\n        ])\r\n\r\n        setHeadMobileCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n        ])\r\n    \r\n        setSearchCell([\r\n            { id: 'id', label: 'Id' },\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setDisplayInfo([\r\n            { id: 'id', label: 'Id' },\r\n            { id: 'name', label: 'Name' },\r\n            { id: 'created',  label: 'Created' },\r\n        ])\r\n\r\n        setEditCells([\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setAddCells([\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setAddCellsName({ name: ''})\r\n\r\n        setSearchValue(\"name\")\r\n        \r\n    }, []);\r\n\r\n    return (\r\n    <Grid>\r\n        <Table \r\n            control={true}\r\n            rowsPerPage={5}\r\n            orderBy=\"created\" \r\n            data=\"content_folder\" \r\n            child=\"content\"\r\n            addItemButton={true}\r\n            addItemText=\"Add folder\"\r\n            type=\"folder\"\r\n            addItemIcon={<AddCircleIcon/>}\r\n            addCellsName={addCellsName}\r\n            addCells={addCells}\r\n            displayInfo={displayInfo}\r\n            matches={matches}\r\n            editCells={editCells}\r\n            headCells={matches ? headCells : headMobileCells} \r\n            searchValue={searchValue} \r\n            searchCell={searchCell}/>\r\n    </Grid>\r\n    )\r\n    \r\n}\r\n  ","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Box from '@material-ui/core/Box';\r\nimport Contents from './Content/Contents';\r\nimport Folder from './Content/Folder';\r\nimport PageHeader from '../../modules/components/PageHeader';\r\n\r\n//tabs\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    background: '#eaeff1',\r\n  }\r\n})\r\n\r\nclass Index extends Component {\r\n\r\n  state = {\r\n    value: 0\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue })\r\n  }\r\n\r\n  render(){\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <PageHeader title=\"Content\"/>\r\n        <AppBar\r\n            component=\"div\"\r\n            className={classes.secondaryBar}\r\n            color=\"primary\"\r\n            position=\"static\"\r\n            elevation={0}\r\n            style={{ marginTop: -10 }}\r\n        >\r\n            <Tabs value={this.state.value} onChange={this.handleChange} textColor=\"inherit\">\r\n                <Tab textColor=\"inherit\" label=\"Contents\"  {...a11yProps(0)}/>\r\n                <Tab textColor=\"inherit\" label=\"Folder\"  {...a11yProps(1)}/>\r\n            </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={this.state.value} index={0}>\r\n            <Contents/>\r\n        </TabPanel>\r\n        <TabPanel value={this.state.value} index={1}>\r\n            <Folder/>\r\n        </TabPanel>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIndex.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Index);"],"sourceRoot":""}