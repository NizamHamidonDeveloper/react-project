{"version":3,"sources":["modules/components/EnhancedTableToolbar.js","modules/components/EnhancedTableHead.js","modules/components/ControlButton.js","modules/components/Table.js","modules/components/PageHeader.js","views/pages/Campaign/Campaigns.js","views/pages/Campaign/Stations.js","views/pages/Campaign/Contents.js","modules/components/AddEditCampaign.js","modules/components/Dialog.js","views/pages/Station/Stations.js","modules/components/TablePaginationActions.js","modules/components/ContentPreview.js","modules/components/SupportForm.js","modules/components/Dropzone.js","views/pages/Content/Contents.js"],"names":["useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","props","classes","numSelected","onClickDeleteAll","addItemText","addItemIcon","addItemButton","onClickAddItem","onClickMoveAll","downloadExcel","onClickDownloadExcel","Toolbar","className","clsx","Typography","variant","component","id","selectStation","listOnly","Button","onClick","handleSetStation","selected","style","whiteSpace","marginRight","control","Grid","display","flexDirection","selectContent","Tooltip","IconButton","disabledMove","aria-label","handleSetRows","startIcon","disabledDelete","disableElevation","EnhancedTableHead","onSelectAllClick","order","orderBy","rowCount","onRequestSort","headCells","collapse","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","align","disablePadding","sortDirection","TableSortLabel","active","direction","property","event","label","visuallyHidden","aria-hidden","ControlButton","data","onClickPreview","row","fontSize","onClickOpenFolder","onClickRefresh","opacity","onClickUpdate","onClickRestart","publish","onClickPublish","onClickPreviewCampaign","onClickListStation","onClickInfo","onClickMove","disabled","disabledEdit","onClickEdit","onClickDelete","ExcelFile","ReactExport","ExcelSheet","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","useStyles2","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","CustomPaginationActionsTable","React","useState","snackOpen","setSnackOpen","snackMsg","setSnackMsg","page","setPage","rowsPerPage","setRowsPerPage","setSelected","selectedItem","setSelectedItem","addItem","setAddItem","setOrder","setOrderBy","rows","setRows","rowsChild","setRowsChild","rowsOriginal","setRowsOriginal","setHeadCells","searchValue","setSearchValue","searchtxt","setSearchtxt","searchCell","setSearchCell","loading","setLoading","openDialog","setOpenDialog","dialogLoading","setDialogLoading","fullScreenDialog","setFullScreenDialog","dialogTitle","setDialogTitle","dialogDes","setDialogDes","agreeButton","setAgreeButton","setCollapse","option","setOptions","folderData","setFolderData","allCampaign","setAllCampaign","allAds","setAllAds","allFolder","setAllFolder","allStation","setAllStation","multiDataSet","setMultiDataSet","excelInput","useRef","useEffect","itemRef","firebase","database","ref","on","snapshot","exists","items","folder","forEach","child","itemsVal","val","push","ads","selectedItems","advertisement","campaign","once","itemsStation","itemsCampaign","folder_data","allfolders","itemsChild","addCellsName","off","handleSnackClose","selectedCampaign","indexOf","newRow","content","name","update","refreshed","ServerValue","TIMESTAMP","message","bytesToSize","bytes","i","parseInt","Math","floor","log","round","pow","withinDateTime","startDate","endDate","startTime","endTime","start_date","Date","getFullYear","getMonth","getDate","end_date","current_date","current_time","start_time","getHours","getMinutes","end_time","secondsToHms","d","Number","h","m","s","renderDisabledDelete","newRows","totalRowsContain","length","justifyContent","alignItems","marginTop","CircularProgress","disableShrink","datestring","getSeconds","element","filename","dataSet","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","Fragment","size","Dialog","agreeTxt","disagreeTxt","description","displayInfo","matches","onChangeHandle","e","target","value","onChangeAddItemHandle","editCells","addCells","addItemTitle","handleAgree","remove","then","storage","full_path","delete","catch","error","updated","user","auth","currentUser","email","item","status","newPostKey","key","createUserWithEmailAndPassword","password","userCredential","uid","updates","errorMessage","excelList","listItems","columns","cell","wpx","alignment","font","sz","bold","rgb","bottom","left","right","fill","patternType","fgColor","items_cell","cellid","campaign_value","currentCampaign","wrapText","ads_value","group_value","currentFolder","created_date","Intl","DateTimeFormat","year","day","month","hour","minute","second","hour12","format","toString","refreshed_date","fileSize","campaign_duration","campaign_status","in_use","filter","content_cell","setTimeout","current","click","selectFolder","ContentPreview","renderComponent","selectFolderMoveAll","handleClose","TableContainer","Table","aria-labelledby","newSelecteds","n","handleSelectedSation","TableBody","colSpan","container","md","xs","noValidate","autoComplete","FormControl","fullWidth","InputLabel","marginLeft","Input","startAdornment","InputAdornment","Select","labelId","MenuItem","filterData","undefined","toLowerCase","includes","readRows","slice","isItemSelected","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleCheckBoxClick","cellIndex","labelCellId","totalSize","reduce","prev","next","totalDuration","duration","textOverflow","maxWidth","noWrap","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","Box","TableFooter","TablePagination","labelRowsPerPage","rowsPerPageOptions","count","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","PageHeader","anchorEl","setAnchorEl","saveAs","elevation","currentTarget","keepMounted","Boolean","Index","headMobileCells","setHeadMobileCells","setDisplayInfo","setEditCells","setExcelList","useMediaQuery","breakpoints","up","numeric","setAddCells","setAddCellsName","setFolder","folderList","setFolderList","selectedStations","disableCheckBox","useStyles","background","DraggableComponent","draggableId","provided","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","children","DroppableComponent","onDragEnd","droppableId","droppableProps","placeholder","AddCampaign","setDuration","campaignName","setCampaignName","sequance","setSequance","page2","setPage2","rowsPerPage2","setRowsPerPage2","selecteditem","setSelecteditem","globalSchedule","setGlobalSchedule","parallel","setParallel","setSelectedAds","addDays","selectionRange","setSelectionRange","setHours","timeRange","setTimeRange","globalDateTime","setGlobalDateTime","setSelectedStations","allstations","_selectedStations","itemsAds","newDateTime","setRowsDuration","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","newChild","_uniqueId","savedCampaign","setContentSchedule","global","onChangeDateRange","ranges","selection","onChangeTimeRange","timerange","startMoment","endMoment","scroll","enabled","editableDateInputs","lg","TextField","newValue","min","max","previousValue","newPrev","fontWeight","renderTotalSize","renderTotalDuration","destination","source","scheduled","ExpiredDateTime","onClickRow","Avatar","alt","src","url","borderRadius","controls","minHeight","DialogTitle","withStyles","closeButton","grey","other","disableTypography","textAlign","Divider","AlertDialog","fullScreen","aria-describedby","scope","objectFit","sizeMd","ListItem","button","borderBottom","borderTop","ListItemText","Contents","Stations","Campaigns","station","renderPage","DialogActions","autoFocus","is_playing","zone","subzone","block","lobby","address","postcode","installed_date","sim_number","screen_size","note","brightness","volume","app_download_path","useStyles1","flexShrink","useTheme","ceil","setCount","videoRef","timer","clearTimeout","play","videoEnd","onEnded","MediaCard","setName","lastname","setLastname","phone","setPhone","setEmail","isname","islastname","isphone","isemail","helperText","autoFormat","defaultCountry","regions","multiline","baseStyle","borderWidth","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","thumbsContainer","flexWrap","thumb","boxSizing","img","upload_count","stopUpload","uploading","files","setFiles","uploadTxt","setUploadTxt","uploadComplete","setUploadComplete","mediaRef","mediaDatabaseRef","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","thumbs","useMemo","completedUpload","uploadFiles","getTime","put","metadata","getDownloadURL","contentType","media","Audio","onloadedmetadata","postData","file_name","created","fullPath","handleUploadSuccess","console","LinearProgress","alert"],"mappings":"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","file":"static/js/2.07f4f9df.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n//Table Toolbar\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTableToolbar(props){\r\n\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, onClickDeleteAll, addItemText, addItemIcon, addItemButton, onClickAddItem, onClickMoveAll, type, downloadExcel, onClickDownloadExcel } = props;\r\n  \r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n           \r\n          </Typography>\r\n        )}\r\n\r\n        {\r\n          props.selectStation === true && props.listOnly !== true? \r\n          <Button onClick={()=>props.handleSetStation(props.selected)} variant=\"outlined\" color=\"inherit\" style={{  whiteSpace:'nowrap', marginRight: 10 }}>\r\n            Confirm\r\n          </Button>\r\n          :null\r\n        }\r\n  \r\n        {numSelected > 0 && props.control ? (\r\n          <Grid style={{ paddingRight: 10, display:\"flex\", flexDirection: \"row\" }}>\r\n            {type === \"folder\" ? null : props.selectContent === true ? null : <Tooltip title=\"Move\" style={{  paddingRight: 10 }} >\r\n              <IconButton style={{ display: props.disabledMove? \"none\": \"flex\" }} aria-label=\"move\" onClick={onClickMoveAll}>\r\n                <InputIcon />\r\n              </IconButton>\r\n            </Tooltip>}\r\n            {props.selectContent === true? \r\n            <Button onClick={props.handleSetRows} startIcon={addItemIcon} variant=\"outlined\" color=\"inherit\" style={{  whiteSpace:'nowrap', marginRight: 10 }}>\r\n              Confirm\r\n            </Button>\r\n            \r\n            :<Tooltip title=\"Delete\">\r\n              <IconButton  style={{ display: props.disabledDelete? \"none\": \"flex\" }} aria-label=\"delete\" onClick={onClickDeleteAll}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>}\r\n          </Grid>\r\n        ) : \r\n        <Grid style={{ display: \"flex\", flexDirection:\"row\", paddingRight: 10 }}>\r\n        {addItemButton ? \r\n          <Tooltip title={addItemText}>\r\n            <Button onClick={onClickAddItem} startIcon={addItemIcon} disableElevation variant=\"contained\" color=\"primary\" style={{  whiteSpace:'nowrap', marginRight: 10 }}>\r\n              {addItemText}\r\n            </Button>\r\n          </Tooltip>\r\n        : null}\r\n        {downloadExcel ? \r\n            <Button onClick={onClickDownloadExcel} startIcon={<GetAppIcon/>} disableElevation variant=\"contained\" color=\"primary\" style={{  whiteSpace:'nowrap' }}>\r\n              {\"Export Excel\"}\r\n            </Button>\r\n        : null}\r\n        </Grid>}\r\n      </Toolbar>\r\n    );\r\n};\r\n  \r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nexport default function EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, control, collapse } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    const renderTableCell = () => {\r\n        if(control){\r\n            return (<TableCell aria-hidden style={{padding: 3}}  padding={'none'} align={'right'}>\r\n                \r\n            </TableCell>)\r\n        }\r\n\r\n        else if(collapse){\r\n            return (<TableCell aria-hidden style={{padding: 3}}  padding={'none'} align={'right'}>\r\n                \r\n            </TableCell>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                    style={{ display: props.listOnly ? \"none\": \"normal\"}}\r\n                    indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                    checked={rowCount > 0 && numSelected === rowCount}\r\n                    onChange={onSelectAllClick}\r\n                    inputProps={{ 'aria-label': 'select all' }}\r\n                />\r\n                </TableCell>\r\n                {headCells ? headCells.map((headCell) => (\r\n                <TableCell\r\n                    style={{padding: 3}}\r\n                    key={headCell.id}\r\n                    align={'left'}\r\n                    padding={headCell.disablePadding ? 'none' : 'default'}\r\n                    sortDirection={orderBy === headCell.id ? order : false}\r\n                >\r\n                    <TableSortLabel\r\n                    active={orderBy === headCell.id}\r\n                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                    onClick={createSortHandler(headCell.id)}\r\n                    >\r\n                    {headCell.label}\r\n                    {orderBy === headCell.id ? (\r\n                        <span className={classes.visuallyHidden}>\r\n                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                        </span>\r\n                    ) : null}\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                )):null}\r\n                \r\n               {renderTableCell()}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport StayPrimaryPortraitIcon from '@material-ui/icons/StayPrimaryPortrait';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function ControlButton(props){\r\n    return(\r\n      <Grid>\r\n        {props.data === \"content\" ? <Tooltip title=\"Preview\">\r\n          <IconButton component=\"div\" color=\"primary\" onClick={() => props.onClickPreview(props.row)}>\r\n              <PreviewIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n        {props.type === \"folder\" ? <Tooltip title=\"Enter Folder\">\r\n          <IconButton component=\"div\" color=\"primary\" onClick={() => props.onClickOpenFolder(props.row)}>\r\n              <FolderIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n  \r\n        {props.data === \"station\" ? <Tooltip title=\"Refresh\">\r\n          <IconButton component=\"div\" color=\"primary\" onClick={() => props.onClickRefresh(props.row)}>\r\n              <RefreshIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n\r\n        {props.data === \"station\" ? <Tooltip title=\"Update\">\r\n          <IconButton component=\"div\" color=\"inherit\" style={{ opacity: 0.5 }}  onClick={() => props.onClickUpdate(props.row)}>\r\n              <SystemUpdateAltIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n\r\n        {props.data === \"station\" ? <Tooltip title=\"Restart\">\r\n          <IconButton component=\"div\" color=\"inherit\" style={{ opacity: 0.5 }}  onClick={() => props.onClickRestart(props.row)}>\r\n              <AutorenewIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n        \r\n\r\n        {props.data === \"campaign\" || props.data === \"advertisement\" ? <Tooltip title=\"Publish\">\r\n          <IconButton component=\"div\" color={props.row.publish ? \"primary\":\"inherit\"} style={{ opacity: props.row.publish ? 1:0.5 }}  onClick={() => props.onClickPublish(props.row)}>\r\n              <RefreshIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n\r\n        {props.data === \"campaign\" || props.data === \"advertisement\" || props.data === \"station\" ? <Tooltip title=\"Preview\">\r\n          <IconButton  style={{ opacity: .5 }} color=\"inherit\" component=\"div\" onClick={() => props.onClickPreviewCampaign(props.row)}>\r\n            <PreviewIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n\r\n        {props.data === \"campaign\" || props.data === \"advertisement\"  ? <Tooltip title=\"Station\">\r\n          <IconButton component=\"div\" color={\"inherit\"} style={{ opacity: 0.5 }}  onClick={() => props.onClickListStation(props.row)}>\r\n              <StayPrimaryPortraitIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip> : null }\r\n  \r\n        <Tooltip title=\"Info\">\r\n          <IconButton component=\"div\" style={{ opacity: .5 }} color=\"inherit\" onClick={() => props.onClickInfo(props.row)}>\r\n              <InfoIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {props.type === \"folder\" ? null : <Tooltip title=\"Move\">\r\n          <IconButton component=\"div\" style={{ display: props.disabledMove? \"none\": \"normal\", opacity: .5 }} color=\"inherit\" onClick={() => props.onClickMove(props.row)}>\r\n              <InputIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>}\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton disabled={props.disabledEdit} component=\"div\" style={{ opacity: .5 }} color=\"inherit\" onClick={() => props.onClickEdit(props.row)}>\r\n              <EditIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n            <IconButton disabled={props.disabledDelete} component=\"div\" style={{ opacity: .5 }} color=\"inherit\" onClick={() => props.onClickDelete(props.row)}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Dialog from './Dialog'\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\r\nimport EnhancedTableHead from './EnhancedTableHead';\r\nimport TablePaginationActions from './TablePaginationActions';\r\nimport ControlButton from './ControlButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from \"firebase\";\r\nimport { Tooltip } from '@material-ui/core';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport ContentPreview from './ContentPreview'\r\nimport ReactExport from 'react-data-export';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\n// Table Sort\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n//Table\r\nconst useStyles2 = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: \"100%\",\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n}));\r\n\r\nexport default function CustomPaginationActionsTable(props) {\r\n\r\n  const classes = useStyles2();\r\n  const [snackOpen, setSnackOpen] = React.useState(false);\r\n  const [snackMsg, setSnackMsg] = React.useState(false);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedItem, setSelectedItem] = React.useState(null);\r\n  const [addItem, setAddItem] = React.useState(null);\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState(props.orderBy);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [rowsChild, setRowsChild] = React.useState([]);\r\n  const [rowsOriginal, setRowsOriginal] = React.useState([]);\r\n  const [headCells, setHeadCells] = React.useState([]);\r\n  const [searchValue, setSearchValue] = React.useState(\"\");\r\n  const [searchtxt, setSearchtxt] = React.useState(\"\");\r\n  const [searchCell, setSearchCell] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [dialogLoading, setDialogLoading] = React.useState(false);\r\n  const [fullScreenDialog, setFullScreenDialog] = React.useState(false);\r\n  const [dialogTitle, setDialogTitle] = React.useState(\"\");\r\n  const [dialogDes, setDialogDes] = React.useState(\"\");\r\n  const [agreeButton, setAgreeButton] = React.useState(false);\r\n  const [collapse, setCollapse] = React.useState(null);\r\n  const [option, setOptions] = React.useState(\"\");\r\n  const [folderData, setFolderData] = React.useState(null);\r\n  const [allCampaign, setAllCampaign] = React.useState([]);\r\n  const [allAds, setAllAds] = React.useState([]);\r\n  const [allFolder, setAllFolder] = React.useState([]);\r\n  const [allStation, setAllStation] = React.useState([]);\r\n  const [multiDataSet, setMultiDataSet] = React.useState([]);\r\n  const excelInput = React.useRef(null);\r\n \r\n  useEffect(() => {\r\n\r\n    let itemRef = firebase.database().ref(props.data);\r\n    \r\n    itemRef.on('value', snapshot => {\r\n         \r\n      if(snapshot.exists()){\r\n\r\n        let items = [];\r\n\r\n        if(props.folder){\r\n          snapshot.forEach(child => {\r\n            \r\n            var itemsVal = child.val();\r\n            if(itemsVal.folder && \r\n              itemsVal.folder === props.folder){\r\n              items.push(itemsVal);\r\n            }\r\n            \r\n          })\r\n        }\r\n        else{\r\n          snapshot.forEach(child => {\r\n            var itemsVal = child.val();\r\n            if(!itemsVal.folder && props.data !== \"station\"){\r\n              items.push(itemsVal);\r\n            }\r\n            else if(props.data === \"station\"){\r\n              items.push(itemsVal);\r\n            }\r\n          })\r\n        }\r\n\r\n        if(props.listOnly){\r\n          \r\n          if(props.ads){\r\n\r\n            \r\n            let selectedItems = []\r\n\r\n            snapshot.forEach(child => {\r\n              var itemsVal = child.val();\r\n              if(itemsVal.advertisement === props.selectedItem.id){\r\n                selectedItems.push(itemsVal);\r\n              }\r\n            })\r\n\r\n            if(props.listOnly){\r\n              items = selectedItems\r\n            }\r\n            else\r\n            {\r\n              setSelected(selectedItems)\r\n            }\r\n          }\r\n          else\r\n          {\r\n\r\n            let selectedItems = []\r\n\r\n            snapshot.forEach(child => {\r\n              var itemsVal = child.val();\r\n              if(itemsVal.campaign === props.selectedItem.id){\r\n                selectedItems.push(itemsVal);\r\n              }\r\n            })\r\n\r\n            if(props.listOnly){\r\n              items = selectedItems\r\n            }\r\n            else\r\n            {\r\n              setSelected(selectedItems)\r\n            }\r\n          }\r\n          \r\n          \r\n        }\r\n\r\n        if(props.data === \"campaign\"){\r\n          let stationRef = firebase.database().ref(\"station\");\r\n\r\n          stationRef.once('value', snapshot => {\r\n              if(snapshot.exists()){\r\n                var itemsStation = []\r\n                snapshot.forEach(child => {\r\n            \r\n                  var itemsVal = child.val();\r\n                  itemsStation.push(itemsVal);\r\n                  \r\n                })\r\n                setAllStation(itemsStation)\r\n              }\r\n          })\r\n        }\r\n\r\n        if(props.data === \"station\" || props.data === \"content\" || props.data === \"advertisement\"){\r\n          let campaignRef = firebase.database().ref(\"campaign\");\r\n\r\n          campaignRef.once('value', snapshot => {\r\n              if(snapshot.exists()){\r\n                var itemsCampaign = []\r\n                snapshot.forEach(child => {\r\n            \r\n                  var itemsVal = child.val();\r\n                  itemsCampaign.push(itemsVal);\r\n                  \r\n                  \r\n                })\r\n                setAllCampaign(itemsCampaign)\r\n              }\r\n          })\r\n\r\n          let adsRef = firebase.database().ref(\"advertisement\");\r\n\r\n          adsRef.once('value', snapshot => {\r\n              if(snapshot.exists()){\r\n                var itemsCampaign = []\r\n                snapshot.forEach(child => {\r\n            \r\n                  var itemsVal = child.val();\r\n                  itemsCampaign.push(itemsVal);\r\n                  \r\n                  \r\n                })\r\n                setAllAds(itemsCampaign)\r\n              }\r\n          })\r\n        }\r\n\r\n        let folderRef = firebase.database().ref(props.folder_data);\r\n\r\n        folderRef.once('value', snapshot => {\r\n          if(snapshot.exists()){\r\n            var allfolders = []\r\n            snapshot.forEach(child => {\r\n        \r\n              var itemsVal = child.val();\r\n              allfolders.push(itemsVal);\r\n              \r\n              \r\n            })\r\n            setAllFolder(allfolders)\r\n          }\r\n        })\r\n\r\n        if(props.child){\r\n          let childRef = firebase.database().ref(props.child);\r\n\r\n          childRef.once('value', snapshot => {\r\n         \r\n            if(snapshot.exists()){\r\n              let itemsChild = [];\r\n              \r\n              snapshot.forEach(child => {\r\n                var itemsVal = child.val();\r\n                itemsChild.push(itemsVal);\r\n              })\r\n\r\n              setRowsChild(itemsChild)\r\n              setRows(items)\r\n              setRowsOriginal(items)\r\n              setLoading(false)\r\n              \r\n            }\r\n            else{\r\n              setRowsChild([])\r\n              setRows(items)\r\n              setRowsOriginal(items)\r\n              setLoading(false)\r\n            }\r\n\r\n          })\r\n\r\n        }\r\n        else\r\n        {\r\n          setRows(items)\r\n          setRowsOriginal(items)\r\n          setLoading(false)\r\n          \r\n        }\r\n\r\n      }\r\n      else\r\n      {\r\n        setRowsChild([])\r\n        setRows([])\r\n        setRowsOriginal([])\r\n        setLoading(false)\r\n      }\r\n        \r\n    })\r\n\r\n    setHeadCells(props.headCells ? props.headCells : [])\r\n    setSearchCell(props.searchCell ? props.searchCell : [])\r\n    setSearchValue(props.searchValue ? props.searchValue : \"\")\r\n    setAddItem(props.addCellsName ? props.addCellsName : [])\r\n    \r\n\r\n    return () => {\r\n      itemRef.off()\r\n    };\r\n    \r\n  }, [props]);\r\n\r\n  const handleSnackClose = (event) => {\r\n    setSnackOpen(false);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n);\r\n      setSelected(newSelecteds);\r\n\r\n      if(props.handleSelectedSation){\r\n        props.handleSelectedSation(newSelecteds)\r\n      }\r\n      \r\n      return;\r\n    }else\r\n    {\r\n      if(props.handleSelectedSation){\r\n        props.handleSelectedSation([])\r\n      }\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const handleCheckBoxClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    \r\n    if(props.handleSelectedSation){\r\n      props.handleSelectedSation(newSelected)\r\n    }\r\n    \r\n    setSelected(newSelected);\r\n  };\r\n\r\n  //Search\r\n  const onChangeSearchSelect = event => {\r\n    setSearchtxt(\"\")\r\n    setSearchValue(event.target.value)\r\n    setRows(rowsOriginal)\r\n  }\r\n\r\n  const search = event => {\r\n\r\n    setSearchtxt(event.target.value)\r\n    setPage(0)\r\n  }\r\n\r\n  //Dialog\r\n  const onClickDeleteAll = () => {\r\n    setDialogLoading(false)\r\n    setAgreeButton(true)\r\n    setDialogTitle(\"Delete all selected items\")\r\n    setOptions(\"deleteAll\")\r\n    setDialogDes(\"Are you sure you want to delete these items?\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickMoveAll = () => {\r\n    setDialogLoading(true)\r\n    let itemRef = firebase.database().ref(props.folder_data);\r\n    \r\n    itemRef.once('value', snapshot => {\r\n        \r\n      if(snapshot.exists()){\r\n        let items = [];\r\n        snapshot.forEach(child => {\r\n            \r\n          var itemsVal = child.val();\r\n          items.push(itemsVal);\r\n          \r\n        })\r\n        \r\n        setFolderData(items)\r\n        setDialogLoading(false)\r\n      }\r\n\r\n    })\r\n\r\n    setAgreeButton(false)\r\n    setDialogTitle(\"Move all selected items\")\r\n    setOptions(\"moveAll\")\r\n    setDialogDes(\"Are you sure you want to move these items?\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickDelete = (row) => {\r\n    setDialogLoading(false)\r\n    setSelectedItem(row)\r\n    setAgreeButton(true)\r\n    setDialogTitle(\"Delete\")\r\n    setOptions(\"delete\")\r\n    setDialogDes(\"Are you sure you want to delete this item?\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickEdit = (row) => {\r\n\r\n    setDialogLoading(false)\r\n    setSelectedItem(row)\r\n    props.data === \"campaign\" || props.data === \"advertisement\" ?  setAgreeButton(false) : setAgreeButton(true)\r\n    setDialogTitle(\"Edit\")\r\n    setOptions(\"edit\")\r\n    setDialogDes(\"\")\r\n    props.data === \"campaign\" || props.data === \"advertisement\" ? setFullScreenDialog(true) : setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickInfo = (row) => {\r\n    setDialogLoading(false)\r\n    setSelectedItem(row)\r\n    setAgreeButton(false)\r\n    setDialogTitle(\"Info\")\r\n    setOptions(\"info\")\r\n    setDialogDes(\"\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickPreview = (row) => {\r\n    setDialogLoading(false)\r\n    setSelectedItem(row)\r\n    setAgreeButton(false)\r\n    setDialogTitle(\"Preview\")\r\n    setOptions(\"preview\")\r\n    setDialogDes(\"\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickMove = (row) => {\r\n\r\n    setDialogLoading(true)\r\n    let itemRef = firebase.database().ref(props.folder_data);\r\n    \r\n    itemRef.once('value', snapshot => {\r\n        \r\n      if(snapshot.exists()){\r\n        let items = [];\r\n        snapshot.forEach(child => {\r\n            \r\n          var itemsVal = child.val();\r\n          items.push(itemsVal);\r\n          \r\n        })\r\n        \r\n        setFolderData(items)\r\n        setDialogLoading(false)\r\n      }\r\n\r\n    })\r\n\r\n    setAgreeButton(false)\r\n    setSelectedItem(row)\r\n    setDialogTitle(\"Move\")\r\n    setOptions(\"move\")\r\n    setDialogDes(\"Are you sure you want to move this item?\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickPreviewCampaign = (row) => {\r\n\r\n    if(props.data === \"station\"){\r\n      \r\n      if(row.campaign){\r\n        /*var combinedContent = []\r\n        var selectedCampaign = allCampaign.filter(val => row.campaign.map(val => val.id).includes(val.id))\r\n        selectedCampaign.forEach(val => {\r\n          if(val.content){\r\n            val.content.forEach(childVal => {\r\n              combinedContent.push(childVal)\r\n            })\r\n          }\r\n        })\r\n\r\n        var newRow = { content: combinedContent}*/\r\n        var selectedCampaign = allCampaign.map(val => val.id).indexOf(row.campaign)\r\n\r\n        if(selectedCampaign !== -1){\r\n          var newRow = { content: allCampaign[selectedCampaign].content } \r\n          setDialogLoading(false)\r\n          setSelectedItem(newRow)\r\n          setAgreeButton(false)\r\n          setDialogTitle(\"Preview\")\r\n          setOptions(\"playPreview\")\r\n          setDialogDes(\"\")\r\n          setFullScreenDialog(false)\r\n          setOpenDialog(true)\r\n        }\r\n        \r\n        \r\n      }\r\n    }\r\n    else\r\n    {\r\n      setDialogLoading(false)\r\n      setSelectedItem(row)\r\n      setAgreeButton(false)\r\n      setDialogTitle(\"Preview\")\r\n      setOptions(\"playPreview\")\r\n      setDialogDes(\"\")\r\n      setFullScreenDialog(false)\r\n      setOpenDialog(true)\r\n    }\r\n    \r\n  }\r\n\r\n  const onClickPublish = (row) => {\r\n    setDialogLoading(false)\r\n    setSelectedItem(row)\r\n    setAgreeButton(true)\r\n    setDialogTitle(\"Publish\")\r\n    setOptions(\"publish\")\r\n    setDialogDes(\"Are you sure you want to publish this campaign?\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickAddItem = () => {\r\n    setDialogLoading(false)\r\n    setSelectedItem(null)\r\n    setAgreeButton(true)\r\n    setDialogTitle(props.addItemText)\r\n    setOptions(\"addItem\")\r\n    setDialogDes(\"\")\r\n    props.data === \"campaign\" || props.data === \"advertisement\"  ? setFullScreenDialog(true) : setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickDownloadExcel = () => {\r\n    setDialogLoading(false)\r\n    setAgreeButton(true)\r\n    setDialogTitle(\"Download Excel\")\r\n    setOptions(\"downloadExcel\")\r\n    setDialogDes(\"\")\r\n    setFullScreenDialog(false)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickOpenFolder = (row) => {\r\n    setDialogLoading(false)\r\n    setSelectedItem(row)\r\n    setAgreeButton(false)\r\n    setDialogTitle(row.name)\r\n    setOptions(\"openFolder\")\r\n    setDialogDes(\"\")\r\n    setFullScreenDialog(true)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const onClickRefresh = (row) => {\r\n    firebase.database().ref(props.data + '/' + row.id).update({ refreshed: firebase.database.ServerValue.TIMESTAMP })\r\n    firebase.database().ref(props.data + '/' + row.id).update({ push: true, message: \"push\" })\r\n  }\r\n\r\n  const onClickUpdate = (row) => {\r\n    firebase.database().ref(props.data + '/' + row.id).update({ refreshed: firebase.database.ServerValue.TIMESTAMP })\r\n    firebase.database().ref(props.data + '/' + row.id).update({ push: true, message: \"update\" })\r\n  }\r\n\r\n  const onClickRestart = (row) => {\r\n    firebase.database().ref(props.data + '/' + row.id).update({ refreshed: firebase.database.ServerValue.TIMESTAMP })\r\n    firebase.database().ref(props.data + '/' + row.id).update({ push: true, message: \"restart\" })\r\n  }\r\n\r\n  const onClickListStation = (row) => {\r\n    setDialogLoading(false)\r\n    setSelectedItem(row)\r\n    setAgreeButton(false)\r\n    setDialogTitle(row.name)\r\n    setOptions(\"openFolder\")\r\n    setDialogDes(\"\")\r\n    setFullScreenDialog(true)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false)\r\n  };\r\n\r\n  const bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  const selectFolder = (cell) => {\r\n    firebase.database().ref(props.data + '/' + selectedItem.id).update({ folder: cell ? cell.id : null })\r\n    if(selectedItem.folder){\r\n      firebase.database().ref(props.folder_data + \"/\" + selectedItem.folder).update({ updated: firebase.database.ServerValue.TIMESTAMP})\r\n    }\r\n    \r\n    setSelected([])\r\n    setOpenDialog(false)\r\n  }\r\n\r\n  const selectFolderMoveAll = (cell) => {\r\n\r\n    selected.forEach((child, index) => {\r\n      firebase.database().ref(props.data + '/' + child.id).update({ folder: cell ? cell.id : null })\r\n      if(child.folder){\r\n        firebase.database().ref(props.folder_data + \"/\" + child.folder).update({ updated: firebase.database.ServerValue.TIMESTAMP})\r\n      }\r\n    });\r\n\r\n    setSelected([])\r\n    setOpenDialog(false)\r\n  }\r\n\r\n  const handleAgree = () => {\r\n\r\n    if(option === \"deleteAll\"){\r\n        selected.forEach((child, index) => {\r\n          firebase.database().ref(props.data + '/' + child.id).remove().then(() => {\r\n            if(props.data === \"content\"){\r\n              firebase.storage().ref().child(child.full_path).delete().catch((error)=>{\r\n\r\n              })\r\n            }\r\n          })\r\n          if(child.folder){\r\n            firebase.database().ref(props.folder_data + \"/\" + child.folder).update({ updated: firebase.database.ServerValue.TIMESTAMP})\r\n          }\r\n          firebase.database().ref(\"log_\"+props.data).push({  user: firebase.auth().currentUser.email, item: child, status: \"deleted\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n        });\r\n    }\r\n\r\n    else if(option === \"delete\"){\r\n      firebase.database().ref(props.data + '/' + selectedItem.id).remove().then(() => {\r\n        if(props.data === \"content\"){\r\n          firebase.storage().ref().child(selectedItem.full_path).delete().catch((error)=>{\r\n           \r\n          })\r\n          \r\n        }\r\n        \r\n        if(selectedItem.folder){\r\n          firebase.database().ref(props.folder_data + \"/\" + selectedItem.folder).update({ updated: firebase.database.ServerValue.TIMESTAMP})\r\n        }\r\n        firebase.database().ref(\"log_\"+props.data).push({  user: firebase.auth().currentUser.email, item: selectedItem, status: \"deleted\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n      })\r\n    }    \r\n\r\n    else if(option === \"edit\"){\r\n      firebase.database().ref(props.data + '/' + selectedItem.id).update(selectedItem)\r\n\r\n      firebase.database().ref(\"log_\"+props.data).push({  user: firebase.auth().currentUser.email, item: selectedItem, status: \"edited\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n    }    \r\n\r\n    else if(option === \"addItem\"){\r\n\r\n        var newPostKey = firebase.database().ref().child(props.data).push().key;\r\n\r\n        addItem['created'] = firebase.database.ServerValue.TIMESTAMP;\r\n        addItem['id'] = newPostKey;\r\n        addItem['user'] = firebase.auth().currentUser.email;\r\n\r\n        if(props.folder){\r\n          addItem['folder'] = props.folder;\r\n          firebase.database().ref(props.folder_data + \"/\" + props.folder).update({ updated: firebase.database.ServerValue.TIMESTAMP})\r\n        }\r\n\r\n        \r\n    \r\n        if(props.data === \"user\"){\r\n          firebase.auth().createUserWithEmailAndPassword(addItem.email, addItem.password)\r\n          .then((userCredential) => {\r\n            // Signed in \r\n            var user = userCredential.user;\r\n\r\n            addItem['id'] = user.uid\r\n            var updates = {};\r\n            updates[props.data + '/' + user.uid] = addItem;\r\n            \r\n            firebase.database().ref().update(updates);\r\n            setAddItem(props.addCellsName ? props.addCellsName : [])\r\n    \r\n            firebase.database().ref(\"log_\"+props.data).push({  user: firebase.auth().currentUser.email, item: addItem, status: \"added\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n          })\r\n          .catch((error) => {\r\n            var errorMessage = error.message;\r\n\r\n            setSnackMsg(errorMessage)\r\n            setSnackOpen(true)\r\n          });\r\n          \r\n        }\r\n        else\r\n        {\r\n          var updates = {};\r\n          updates[props.data + '/' + newPostKey] = addItem;\r\n\r\n          firebase.database().ref().update(updates);\r\n          setAddItem(props.addCellsName ? props.addCellsName : [])\r\n  \r\n          firebase.database().ref(\"log_\"+props.data).push({  user: firebase.auth().currentUser.email, item: addItem, status: \"added\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n        }\r\n        \r\n    }\r\n\r\n    else if(option === \"publish\"){\r\n      firebase.database().ref(props.data + '/' + selectedItem.id).update({ publish: true });\r\n\r\n      if(props.data === \"campaign\"){\r\n        allStation.forEach(val => {\r\n          if(val.campaign === selectedItem.id){\r\n            firebase.database().ref('station/' + val.id).update({ push: true, message: \"push\", refreshed: firebase.database.ServerValue.TIMESTAMP })\r\n          }\r\n        })\r\n      }\r\n\r\n      firebase.database().ref(\"log_\"+props.data).push({  user: firebase.auth().currentUser.email, item: selectedItem, status: \"published\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n    }\r\n\r\n    else if(option === \"downloadExcel\"){\r\n\r\n      if(props.excelList){\r\n\r\n        var listItems = {\r\n          columns:[],\r\n          data:[[]]\r\n        }\r\n\r\n        props.excelList.forEach(cell => {\r\n\r\n          if(cell.id === \"id\" || cell.id === \"name\" ||  cell.id === \"type\" \r\n          ||  cell.id === \"zone\"  ||  cell.id === \"address\" ||  cell.id === \"created\" ||  cell.id === \"refreshed\"\r\n          ||  cell.id === \"block\" ||  cell.id === \"note\"){\r\n            listItems.columns.push({title: \"\", width: {wpx: 170}})\r\n          }\r\n          else\r\n          {\r\n            listItems.columns.push({title: \"\", width: {wpx: cell.label.length*12}})\r\n          }\r\n          \r\n          listItems.data[0].push({value: cell.label, \r\n            style: { \r\n              alignment: { horizontal: \"center\" }, \r\n              font: {sz: \"11\", bold: true}, \r\n              border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n              bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n              left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n              right: { style: \"thin\", color: {rgb: \"FF000000\"}} }, \r\n              fill: {patternType: \"solid\", fgColor: {rgb: \"FFffd200\"}}}})\r\n\r\n        })\r\n\r\n        rows.forEach((cell) => {\r\n          var items_cell = []\r\n          props.excelList.forEach(cellid => {\r\n\r\n            if(cellid.id === \"campaign\"){\r\n\r\n              var campaign_value = \"\";\r\n              \r\n              if(cell[cellid.id]){\r\n                \r\n                  var currentCampaign = allCampaign.map(val => val.id).indexOf(cell[cellid.id])\r\n\r\n                  if(currentCampaign !== -1){\r\n                    campaign_value = allCampaign[currentCampaign].name;\r\n                  }\r\n                \r\n              }\r\n\r\n              items_cell.push(\r\n                {value: campaign_value, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            else if(cellid.id === \"advertisement\"){\r\n\r\n              var ads_value = \"\";\r\n              \r\n              if(cell[cellid.id]){\r\n\r\n                  var currentCampaign = allAds.map(val => val.id).indexOf(cell[cellid.id])\r\n\r\n                  if(currentCampaign !== -1){\r\n                    ads_value = allAds[currentCampaign].name;\r\n                  }\r\n\r\n                \r\n              }\r\n\r\n              items_cell.push(\r\n                {value: ads_value, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            else if(cellid.id === \"folder\"){\r\n\r\n              var group_value = \"\";\r\n              \r\n              if(cell[cellid.id]){\r\n                var currentFolder = allFolder.map(val => val.id).indexOf(cell[cellid.id])\r\n                group_value = allFolder[currentFolder].name\r\n              }\r\n              \r\n\r\n              items_cell.push(\r\n                {value: group_value, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            else if(cellid.id === \"created\" || cellid.id === \"signed_in\" || cellid.id === \"signed_out\"){\r\n\r\n              var created_date = \"\";\r\n\r\n              if(cell[cellid.id]){\r\n                created_date = new Intl.DateTimeFormat('en-US', {year: 'numeric',day: '2-digit',  month: 'long' ,hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true }).format(cell[cellid.id]).toString()\r\n              }\r\n              \r\n\r\n              items_cell.push(\r\n                {value: created_date, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            else if(cellid.id === \"refreshed\"){\r\n\r\n              var refreshed_date = \"\";\r\n\r\n              if(cell[cellid.id]){\r\n                refreshed_date = new Intl.DateTimeFormat('en-US', {year: 'numeric',day: '2-digit',  month: 'long' ,hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true }).format(cell[cellid.id]).toString()\r\n              }\r\n\r\n              items_cell.push(\r\n                {value: refreshed_date, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            else if(cellid.id === \"size\" || cellid.id === \"campaign_size\"){\r\n\r\n              var fileSize = \"\";\r\n\r\n              if(cell[cellid.id]){\r\n                fileSize = bytesToSize(cell[cellid.id])\r\n              }\r\n              \r\n\r\n              items_cell.push(\r\n                {value: fileSize, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            else if(cellid.id === \"campaign_duration\"){\r\n\r\n              var campaign_duration = \"\"\r\n\r\n              if(cell[cellid.id]){\r\n                campaign_duration = secondsToHms(cell[cellid.id])\r\n              }\r\n              \r\n              \r\n              items_cell.push(\r\n                {value: campaign_duration, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n\r\n            else if(cellid.id === \"publish\"){\r\n\r\n              var publish = \"Not yet\"\r\n\r\n              if(cell[cellid.id]){\r\n                publish = \"Yes\"\r\n              }\r\n              \r\n              \r\n              items_cell.push(\r\n                {value: publish, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n\r\n            else if(cellid.id === \"campaign_status\"){\r\n\r\n              var campaign_status = \"Permanent\"\r\n\r\n              if(cell[cellid.id] !== null){\r\n\r\n                if(cell[cellid.id]){\r\n                  campaign_status = \"Not Expired\"\r\n                }\r\n                else\r\n                {\r\n                  campaign_status = \"Expired\"\r\n                }\r\n                \r\n              }\r\n              \r\n              \r\n              items_cell.push(\r\n                {value: campaign_status, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n\r\n            else if(cellid.id === \"in_use\"){\r\n\r\n              var in_use = \"\";\r\n\r\n              var newRows = [];\r\n              newRows = allCampaign.filter(item => {\r\n                if(item.content){\r\n                  if(item.content.map(val => val.id).indexOf(cell.id) !== -1){\r\n                    return item\r\n                  }else\r\n                  {\r\n                    return undefined\r\n                  }\r\n                }else\r\n                {\r\n                  return undefined\r\n                }\r\n              })\r\n\r\n              if(newRows.length > 0){\r\n                newRows.forEach((content_cell, index) => {\r\n\r\n                  if(newRows.length === 1){\r\n                    in_use += content_cell.name\r\n                  }\r\n                  else\r\n                  {\r\n                    if(index === newRows.length-1){\r\n                      in_use += content_cell.name;\r\n                    }\r\n                    else\r\n                    {\r\n                      in_use += content_cell.name + \"\\n\"\r\n                    }\r\n                    \r\n                  }\r\n                  \r\n                })\r\n                \r\n              }\r\n              \r\n\r\n              items_cell.push(\r\n                {value: in_use, \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            else\r\n            {\r\n              items_cell.push(\r\n                {value: cell[cellid.id] ? cell[cellid.id] : \"\", \r\n                  style: { \r\n                    alignment: { horizontal: \"center\", vertical: \"center\", wrapText: \"true\" }, \r\n                    font: {sz: \"11\"}, \r\n                    border: { top: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    bottom: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    left: { style: \"thin\", color: {rgb: \"FF000000\"}}, \r\n                    right: { style: \"thin\", color: {rgb: \"FF000000\"}}}}\r\n                }\r\n              )\r\n            }\r\n            \r\n          })\r\n\r\n          \r\n          listItems.data.push(items_cell)\r\n        })\r\n        \r\n        setMultiDataSet([listItems])\r\n\r\n        setTimeout(\r\n          () => excelInput.current.click(), \r\n          1000\r\n        );\r\n        \r\n      }\r\n    }\r\n\r\n    setSelected([])\r\n    setOpenDialog(false)\r\n  }\r\n\r\n  const onChangeHandle = (e, id) => {\r\n    setSelectedItem({ ...selectedItem, [id]: e.target.value });\r\n  }\r\n\r\n  const onChangeAddItemHandle = (e, id) => {\r\n    setAddItem({ ...addItem, [id]: e.target.value });\r\n  }\r\n\r\n  const withinDateTime = (startDate, endDate, startTime, endTime) => {\r\n        \r\n       \r\n    if(startDate && endDate && startTime && endTime){\r\n\r\n        var start_date = new Date(new Date(startDate).getFullYear(), new Date(startDate).getMonth(), new Date(startDate).getDate());\r\n        var end_date = new Date(new Date(endDate).getFullYear(), new Date(endDate).getMonth(), new Date(endDate).getDate());\r\n        var current_date = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\r\n        var current_time = new Date();\r\n\r\n        var start_time = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), new Date(startTime).getHours(), new Date(startTime).getMinutes());\r\n        var end_time = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), new Date(endTime).getHours(), new Date(endTime).getMinutes());\r\n\r\n        if(start_date <= current_date && end_date >= current_date && new Date(start_time).getHours() === new Date(end_time).getHours() && new Date(startTime).getMinutes() === new Date(endTime).getMinutes()){\r\n            return true\r\n        }\r\n\r\n        if(start_date <= current_date && end_date >= current_date && current_time >= start_time && current_time <= end_time){\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n    else\r\n    {\r\n        return true\r\n    }\r\n  }\r\n\r\n  const secondsToHms = (d)=> {\r\n    d = Number(d);\r\n    var h = Math.floor(d / 3600);\r\n    var m = Math.floor(d % 3600 / 60);\r\n    var s = Math.floor(d % 3600 % 60);\r\n\r\n    var hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\";\r\n    var mDisplay = m > 0 ? m + (m === 1 ? \" min, \" : \" mins, \") : \"\";\r\n    var sDisplay = s > 0 ? s + (s === 1 ? \" sec\" : \" secs\") : \"\";\r\n    return hDisplay + mDisplay + sDisplay; \r\n  }\r\n\r\n  const renderComponent = () => {\r\n        \r\n    if(option === \"playPreview\"){\r\n        return(\r\n            <ContentPreview withinDateTime={withinDateTime} rows={selectedItem.content}/>\r\n        )\r\n    }\r\n  }\r\n\r\n  const renderDisabledDelete = (newRows, totalRowsContain) => {\r\n\r\n    var disabledDelete = false\r\n\r\n    if(totalRowsContain.length > 0)\r\n    {\r\n      disabledDelete = true\r\n    }\r\n    else if(newRows.length > 0){\r\n      disabledDelete = true\r\n    }\r\n    else{\r\n      disabledDelete = props.disabledDelete\r\n    }\r\n    return disabledDelete\r\n  }\r\n\r\n  const readRows = () => {\r\n\r\n    var filterData = rowsOriginal.filter(item => { \r\n      \r\n      if(item[searchValue] !== undefined){\r\n\r\n        if(searchValue === \"folder\"){\r\n          var currentFolder = allFolder.map((val) => val.id).indexOf(item[searchValue])\r\n\r\n          if(currentFolder !== -1){\r\n            return allFolder[currentFolder].name.toString().toLowerCase().includes(searchtxt.toLowerCase())\r\n          }\r\n          else\r\n          {\r\n            return undefined\r\n          }\r\n        }\r\n        else\r\n        {\r\n          return item[searchValue].toString().toLowerCase().includes(searchtxt.toLowerCase())\r\n        }\r\n        \r\n        \r\n      }\r\n      else\r\n      {\r\n        return undefined\r\n      }\r\n    });\r\n\r\n    if(searchtxt !== \"\"){\r\n        return filterData\r\n    }\r\n    else{\r\n        return rowsOriginal\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  if(loading){\r\n    return (\r\n    <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', marginTop: 70  }}>\r\n      <CircularProgress \r\n        disableShrink\r\n        color=\"primary\" />\r\n    </div>);\r\n  }\r\n\r\n  var d = new Date();\r\n  var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear() + \"-\" + \r\n  d.getHours() + \"-\" + d.getMinutes() + \"-\" + d.getSeconds();\r\n\r\n  return (\r\n    <Grid>\r\n        <ExcelFile element={<Button style={{ display:\"none\"}} ref={excelInput} >download</Button>} filename={props.data + \"_\" + datestring}>\r\n                <ExcelSheet dataSet={multiDataSet} name={props.data}/>\r\n        </ExcelFile>\r\n        <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={snackOpen}\r\n        autoHideDuration={5000}\r\n        onClose={handleSnackClose}\r\n        message={snackMsg}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n        <Dialog \r\n          agreeTxt={\"Yes\"}\r\n          disagreeTxt={\"No\"}\r\n          description={dialogDes}\r\n          title={dialogTitle}\r\n          open={openDialog} \r\n          agreeButton={agreeButton}\r\n          selectedItem={selectedItem}\r\n          addItem={addItem}\r\n          displayInfo={props.displayInfo}\r\n          matches={props.matches}\r\n          onChangeHandle={(e, id) => onChangeHandle(e, id)}\r\n          onChangeAddItemHandle={(e, id) => onChangeAddItemHandle(e, id)}\r\n          editCells={props.editCells}\r\n          addCells={props.addCells}\r\n          addItemTitle={props.addItemText}\r\n          handleAgree={handleAgree}\r\n          fullScreenDialog={fullScreenDialog}\r\n          option={option}\r\n          data={props.data}\r\n          dialogLoading={dialogLoading}\r\n          folderData={folderData}\r\n          folder={props.folder}\r\n          allCampaign={allCampaign}\r\n          allAds={allAds}\r\n          selectFolder={selectFolder}\r\n          component={renderComponent()}\r\n          allFolder={allFolder}\r\n          withinDateTime={(data) => withinDateTime(data)}\r\n          secondsToHms={(data) => secondsToHms(data)}\r\n          bytesToSize={(data) => bytesToSize(data)}\r\n          selectFolderMoveAll={selectFolderMoveAll}\r\n          handleClose={handleClose}/>\r\n          \r\n        <EnhancedTableToolbar \r\n          type={props.type}\r\n          data={props.data}\r\n          {...props}\r\n          handleSetRows={() => props.handleSetRows(selected)}\r\n          onClickMoveAll={onClickMoveAll}\r\n          addItemText={props.addItemText} \r\n          addItemIcon={props.addItemIcon}\r\n          addItemButton={props.addItemButton}\r\n          numSelected={selected.length} \r\n          selected={selected}\r\n          onClickAddItem={onClickAddItem}\r\n          onClickDownloadExcel={onClickDownloadExcel}\r\n          onClickDeleteAll={onClickDeleteAll}/>\r\n        <TableContainer>\r\n        <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'medium'}\r\n            aria-label=\"enhanced table\"\r\n            >\r\n            <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                {...props}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n                headCells={headCells}\r\n                control={props.control}\r\n                collapse={props.matches}\r\n                downloadExcel={props.downloadExcel}\r\n            />\r\n            \r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell padding={'none'} colSpan={headCells.length+1+(props.control ? 1 : 0)}>\r\n                    <Grid container>\r\n                        <Grid item md={7} xs={12}>\r\n                        <form noValidate autoComplete=\"off\">\r\n                        <FormControl style={{ marginTop:10 }} fullWidth >\r\n                            <InputLabel style={{ marginLeft:20 }}>Search</InputLabel>\r\n                            <Input disabled={rowsOriginal.length > 0 ? false : true} onChange={(e) => search(e)}\r\n                                value={searchtxt}\r\n                                id=\"input-with-icon-adornment\"\r\n                                startAdornment={\r\n                                    <InputAdornment style={{ marginLeft:20 }} position=\"start\">\r\n                                    <SearchIcon />\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        </form>\r\n                        </Grid>\r\n                        <Grid item md={5} xs={12} style={{ marginTop:10 }}>\r\n                        <FormControl style={{ width: \"100%\"}} >\r\n                            <InputLabel style={{ paddingLeft: 25 }} id=\"simple-select-outlined-label\">Search by</InputLabel>\r\n                            <Select\r\n                                style={{ paddingLeft: 18 }} \r\n                                disabled={rowsOriginal.length > 0 ? false : true}\r\n                                labelId=\"simple-select-outlined-label\"\r\n                                id=\"simple-select-outlined\"\r\n                                value={searchValue}\r\n                                label=\"Search by\"\r\n                                onChange={(e) => onChangeSearchSelect(e)}\r\n                            >\r\n                                {searchCell.map((cell, index)=>{\r\n                                    const labelId = `enhanced-search-${index}`;\r\n                                    return(\r\n                                        <MenuItem key={labelId} value={cell.id}>{cell.label}</MenuItem>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </TableCell>\r\n                </TableRow>\r\n                {stableSort(readRows(), getComparator(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                    const isItemSelected = isSelected(row);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    var newRows = [];\r\n                    newRows = allCampaign.filter(item => {\r\n                      if(item.content){\r\n                        if(item.content.map(val => val.id).indexOf(row.id) !== -1){\r\n                          return item\r\n                        }else\r\n                        {\r\n                          return undefined\r\n                        }\r\n                      }else\r\n                      {\r\n                        return undefined\r\n                      }\r\n                    })\r\n\r\n                    var totalRowsContain = [];\r\n                    rowsChild.forEach(val=> {\r\n                      if(val.folder === row.id){\r\n                        totalRowsContain.push(val)\r\n                      }\r\n                    })\r\n\r\n\r\n                    return (\r\n                      <React.Fragment key={row.id}>\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          aria-checked={isItemSelected}\r\n                          tabIndex={-1}\r\n                          selected={isItemSelected} \r\n                          >\r\n                          <TableCell padding=\"checkbox\">\r\n                              <Checkbox\r\n                                style={{ display: props.listOnly ? \"none\" : \"normal\"}} \r\n                              onClick={(event) => handleCheckBoxClick(event, row)}\r\n                              checked={isItemSelected}\r\n                              inputProps={{ 'aria-labelledby': labelId }}\r\n                              />\r\n                          </TableCell>\r\n                          {headCells.map((cell, cellIndex) => {\r\n                              const labelCellId = `enhanced-table-cell-${cellIndex}`;\r\n\r\n                              \r\n\r\n                              if(cell.id === \"created\" || cell.id === \"refreshed\" || cell.id === \"signed_in\" || cell.id === \"signed_out\"){\r\n                                return(\r\n                                  row[cell.id] ? <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {new Intl.DateTimeFormat('en-GB', {year: 'numeric',day: '2-digit',  month: 'long' ,hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true }).format(row[cell.id])}\r\n                                  </TableCell> : <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\"></TableCell>)\r\n                              }\r\n                              else if(cell.id === \"size\"){\r\n                                return(\r\n                                  <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {bytesToSize(row[cell.id])}\r\n                                  </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"in_use\"){\r\n                                return(\r\n                                  <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {newRows.length > 0 ? \r\n                                   <Tooltip title={<Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                                      {newRows.map(val => {\r\n                                        return <Typography key={val.id} variant=\"caption\">{val.name}</Typography>\r\n                                    })}</Grid>}>\r\n                                    <IconButton>\r\n                                      <CheckCircleIcon color=\"primary\" fontSize=\"small\"/> \r\n                                    </IconButton>\r\n                                  </Tooltip>\r\n                                  \r\n                                  : \r\n                                  <IconButton>\r\n                                    <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                                  </IconButton>\r\n                                  }\r\n                                  </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"total\"){\r\n                                \r\n                                return(\r\n                                  <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {totalRowsContain.length + (totalRowsContain.length > 1 ? \" \" + props.child + \"s\" : \" \"+ props.child)}\r\n                                  </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"campaign\"){\r\n                                \r\n                                return(\r\n                                  <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                    <Tooltip title={\r\n                                      row[cell.id] ? <Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                                        <Typography key={row[cell.id]} variant=\"caption\">{allCampaign.map(val=> val.id).indexOf(row[cell.id]) !== -1 ? allCampaign[allCampaign.map(val=> val.id).indexOf(row[cell.id])].name : ''}</Typography></Grid>: '' }>\r\n                                      <Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                                        {row[cell.id] ? <AssignmentTurnedInIcon color=\"primary\"/> : null}\r\n                                      </Grid>\r\n                                    </Tooltip>\r\n                                  </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"advertisement\"){\r\n                                \r\n                                return(\r\n                                  <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                    <Tooltip title={\r\n                                      row[cell.id] ? <Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                                        <Typography key={row[cell.id]} variant=\"caption\">{allAds.map(val=> val.id).indexOf(row[cell.id]) !== -1 ? allAds[allAds.map(val=> val.id).indexOf(row[cell.id])].name : ''}</Typography></Grid>: '' }>\r\n                                      <Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                                        {row[cell.id] ? <AssignmentTurnedInIcon color=\"primary\"/> : null}\r\n                                      </Grid>\r\n                                    </Tooltip>\r\n                                  </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"publish\"){\r\n\r\n                                if(props.data === \"advertisement\"){\r\n                                  var currentCampaign = allCampaign.filter(val=> {\r\n                                    if(val.advertisement && val.advertisement === row.id){\r\n                                      return val\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                      return undefined\r\n                                    }\r\n                                  })\r\n                                  \r\n                                  \r\n                                  return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {row[cell.id] ? \r\n                                  <Tooltip title={currentCampaign.length > 0 ? <div>{currentCampaign.map(val=> { return <div>{val.name}<br /></div> })}</div> : \"\"}>\r\n                                    <IconButton>\r\n                                      <CheckCircleIcon color=\"primary\" fontSize=\"small\"/>\r\n                                    </IconButton>\r\n                                  </Tooltip>:\r\n                                  <Tooltip title={currentCampaign.length > 0 ? <div>{currentCampaign.map(val=> { return <div>{val.name}<br /></div> })}</div> : \"\"}>\r\n                                  <IconButton>\r\n                                    <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                                  </IconButton></Tooltip>}\r\n                                </TableCell>)\r\n                                }\r\n                                else\r\n                                {\r\n                                  return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {row[cell.id] ? \r\n                                  <IconButton>\r\n                                    <CheckCircleIcon color=\"primary\" fontSize=\"small\"/>\r\n                                  </IconButton>:\r\n                                  <IconButton>\r\n                                    <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                                  </IconButton>}\r\n                                </TableCell>)\r\n                                }\r\n                                \r\n                                \r\n                                \r\n                              }\r\n                              else if(cell.id === \"status\"){\r\n                                \r\n                                return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {row[cell.id]? \r\n                                  <Tooltip title=\"Online\">\r\n                                  <IconButton>\r\n                                    <CheckCircleIcon color=\"primary\" fontSize=\"small\"/>\r\n                                  </IconButton>\r\n                                  </Tooltip>:\r\n                                  <Tooltip title=\"Offline\">\r\n                                  <IconButton>\r\n                                    <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                                  </IconButton>\r\n                                  </Tooltip>}\r\n                                </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"is_playing\"){\r\n                                \r\n                                return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {row[cell.id]? \r\n                                  <Tooltip title=\"Playing\">\r\n                                  <IconButton>\r\n                                    <CheckCircleIcon color=\"primary\" fontSize=\"small\"/>\r\n                                  </IconButton>\r\n                                  </Tooltip>:\r\n                                  <Tooltip title=\"Stop\">\r\n                                  <IconButton>\r\n                                    <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                                  </IconButton>\r\n                                  </Tooltip>}\r\n                                </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"campaign_status\"){\r\n\r\n                                if(row.start_date && row.end_date && row.start_time && row.end_time ){\r\n                                  row[cell.id] = withinDateTime(row.start_date, row.end_date, row.start_time, row.end_time);\r\n                                }else{\r\n                                  row[cell.id] = null\r\n                                }\r\n      \r\n                                return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {row[cell.id] != null ? \r\n                                  <Tooltip title={ row[cell.id] ?\"Current\": \"Expired\"}>\r\n                                    <IconButton>\r\n                                      <FiberManualRecordIcon style={{ color: row[cell.id] ? \"#6bce00\" : \"#b4b4b4\"}} fontSize=\"small\"/>\r\n                                    </IconButton>\r\n                                  </Tooltip>\r\n                                  :\r\n                                  <Tooltip title=\"Permanent\">\r\n                                    <IconButton>\r\n                                      <RadioButtonUncheckedIcon style={{ color: \"#b4b4b4\"}} fontSize=\"small\"/>\r\n                                    </IconButton>\r\n                                  </Tooltip>\r\n                                  }\r\n                                </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"campaign_size\"){\r\n\r\n                                var totalSize = row.content.map(val => val.size).reduce((prev, next) => prev + next);\r\n                                row[cell.id] = totalSize;\r\n                                return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {row.content ? \r\n                                  bytesToSize(totalSize)\r\n                                  :\r\n                                  null}\r\n                                </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"campaign_duration\"){\r\n\r\n                                var totalDuration = row.content.map(val => val.duration).reduce((prev, next) => prev + next);\r\n                                row[cell.id] = totalDuration;\r\n                                return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {row.content ? \r\n                                  secondsToHms(totalDuration)\r\n                                  :\r\n                                  null}\r\n                                </TableCell>)\r\n                              }\r\n                              else if(cell.id === \"folder\" || cell.id === \"group\"){\r\n\r\n                                var currentFolder = allFolder.map(val => val.id).indexOf(row.folder)\r\n                                \r\n                                return(<TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                  {currentFolder !== -1 ? \r\n                                  allFolder[currentFolder].name\r\n                                  :\r\n                                  null}\r\n                                </TableCell>)\r\n                              }\r\n\r\n                              \r\n                              \r\n                              return(\r\n                              <TableCell key={labelCellId} style={{ padding: 3 }} align=\"left\">\r\n                                <Grid style={{overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: 200}} >\r\n                                  <Typography variant=\"body2\" noWrap={true}>{row[cell.id]}</Typography>\r\n                                </Grid>\r\n                              </TableCell>)\r\n                          })}\r\n                          {props.control && props.matches? \r\n                            <TableCell key={\"control\"} style={{ padding: 3 }} align=\"right\">\r\n                                <ControlButton \r\n                                  data={props.data}\r\n                                  row={row}\r\n                                  type={props.type}\r\n                                  onClickPreviewCampaign={(row) => onClickPreviewCampaign(row)}\r\n                                  onClickMove={(row)=> onClickMove(row)} \r\n                                  onClickPublish={(row) => onClickPublish(row)}\r\n                                  onClickPreview={(row)=> onClickPreview(row)} \r\n                                  onClickInfo={(row)=> onClickInfo(row)}\r\n                                  onClickEdit={(row)=> onClickEdit(row)}\r\n                                  onClickDelete={(row)=> onClickDelete(row)}\r\n                                  onClickOpenFolder={(row)=> onClickOpenFolder(row)}\r\n                                  onClickRefresh={(row)=> onClickRefresh(row)}\r\n                                  onClickUpdate={(row)=> onClickUpdate(row)}\r\n                                  onClickRestart={(row)=> onClickRestart(row)}\r\n                                  onClickListStation={(row)=> onClickListStation(row)}\r\n                                  disabledDelete={renderDisabledDelete(newRows, totalRowsContain)}\r\n                                  disabledEdit={props.disabledEdit}\r\n                                  {...props}\r\n                                />\r\n                            </TableCell> : null}\r\n\r\n                            {props.matches ? null : \r\n                            <TableCell align=\"right\">\r\n                              <IconButton onClick={() => { \r\n                                  if(collapse === row.id){\r\n                                    setCollapse(null)\r\n                                  }\r\n                                  else\r\n                                  {\r\n                                    setCollapse(row.id)\r\n                                  }\r\n                              }}>\r\n                                {collapse === row.id? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                              </IconButton>\r\n                            </TableCell>}\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={headCells.length+1+(props.control ? 1 : 0)}>\r\n                              <Collapse in={collapse === row.id ? true : false } timeout=\"auto\" unmountOnExit>\r\n                                  <Box margin={1}>\r\n                                      <ControlButton \r\n                                        data={props.data}\r\n                                        row={row}\r\n                                        type={props.type}\r\n                                        onClickPreviewCampaign={(row) => onClickPreviewCampaign(row)}\r\n                                        onClickMove={(row)=> onClickMove(row)} \r\n                                        onClickPublish={(row) => onClickPublish(row)}\r\n                                        onClickPreview={(row)=> onClickPreview(row)} \r\n                                        onClickInfo={(row)=> onClickInfo(row)}\r\n                                        onClickEdit={(row)=> onClickEdit(row)}\r\n                                        onClickDelete={(row)=> onClickDelete(row)}\r\n                                        onClickOpenFolder={(row)=> onClickOpenFolder(row)}\r\n                                        onClickRefresh={(row)=> onClickRefresh(row)}\r\n                                        onClickUpdate={(row)=> onClickUpdate(row)}\r\n                                        onClickRestart={(row)=> onClickRestart(row)}\r\n                                        onClickListStation={(row)=> onClickListStation(row)}\r\n                                        disabledDelete={renderDisabledDelete(newRows, totalRowsContain)}\r\n                                        disabledEdit={props.disabledEdit}\r\n                                        {...props}\r\n                                      />\r\n                                  </Box>\r\n                              </Collapse>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n            </TableBody>\r\n            <TableFooter>\r\n                <TableRow>\r\n                    <TablePagination\r\n                    labelRowsPerPage={\"Pages\"}\r\n                    rowsPerPageOptions={[10, 25, 50]}\r\n                    colSpan={headCells.length+1+(props.control ? 1 : 0)}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    />\r\n                </TableRow>\r\n            </TableFooter>\r\n        </Table>\r\n        </TableContainer>\r\n          \r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Dialog from './Dialog'\r\nimport SupportForm from './SupportForm'\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default function PageHeader(props){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [agreeButton, setAgreeButton] = React.useState(false);\r\n    const [dialogTitle, setDialogTitle] = React.useState(\"\");\r\n    const [option, setOptions] = React.useState(\"\");\r\n    const [dialogDes, setDialogDes] = React.useState(\"\");\r\n    const [fullScreenDialog, setFullScreenDialog] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const onClickDownloadUserManual = () => {\r\n        setAgreeButton(true)\r\n        setDialogTitle(\"Download User Manual\")\r\n        setOptions(\"downloadUserManual\")\r\n        setDialogDes(\"\")\r\n        setFullScreenDialog(false)\r\n        setOpenDialog(true)\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onClickSupportForm = () => {\r\n        setAgreeButton(true)\r\n        setDialogTitle(\"Contact Support\")\r\n        setOptions(\"contactSupport\")\r\n        setDialogDes(\"\")\r\n        setFullScreenDialog(false)\r\n        setOpenDialog(true)\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleAgree = () => {\r\n\r\n        if(option === \"downloadUserManual\"){\r\n            saveAs(\"https://firebasestorage.googleapis.com/v0/b/smrt-b5bb9.appspot.com/o/user%20manual%2FSMRT-CMS-UserManual-20May21-V2.pdf?alt=media&token=7f6ea5a8-3ceb-4db2-8460-5da8f58f9639\", \"user_manual.pdf\");\r\n        }else{\r\n\r\n        }\r\n\r\n        setOpenDialog(false)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Dialog \r\n                agreeTxt={option === \"downloadUserManual\"? \"Download\" : \"Submit\"}\r\n                disagreeTxt={\"Cancel\"}\r\n                description={dialogDes}\r\n                title={dialogTitle}\r\n                open={openDialog} \r\n                agreeButton={agreeButton}\r\n                handleAgree={handleAgree}\r\n                component={ option !== \"downloadUserManual\"?  <SupportForm/> : null}\r\n                fullScreenDialog={fullScreenDialog}\r\n                option={option}\r\n                handleClose={handleCloseDialog}/>\r\n                <AppBar\r\n                    component=\"div\"\r\n                    color=\"primary\"\r\n                    position=\"static\"\r\n                    elevation={0}\r\n                    style={{ marginTop: -10 }}\r\n                    >\r\n                    <Toolbar >\r\n                        <Grid container alignItems=\"center\" spacing={1}>\r\n                            <Grid item xs>\r\n                                <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                                    {props.title}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid style={{ display: \"none\"}} item>\r\n                                <Tooltip title=\"Help\">\r\n                                <Button startIcon={<HelpIcon />} color=\"inherit\"  onClick={handleClick}>\r\n                                    Help\r\n                                </Button>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Toolbar>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem style={{ fontSize: 14 }} onClick={onClickDownloadUserManual}>Download User Manual</MenuItem>\r\n                        <MenuItem style={{ fontSize: 14 }} onClick={onClickSupportForm}>Contact Support</MenuItem>\r\n                        <MenuItem style={{ fontSize: 12 }} disabled>Email: support@pgkdigital.com</MenuItem>\r\n                    </Menu>\r\n            </AppBar>\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport Table from '../../../modules/components/Table'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport default function Index(props) {\r\n\r\n    const [headCells, setHeadCells] = React.useState([]);\r\n    const [headMobileCells, setHeadMobileCells] = React.useState([]);\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n    const [searchCell, setSearchCell] = React.useState([]);\r\n    const [displayInfo, setDisplayInfo] = React.useState([]);\r\n    const [editCells, setEditCells] = React.useState([]);\r\n    const [excelList, setExcelList] = React.useState([]);\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n\r\n    useEffect(() => {\r\n\r\n        setHeadCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'publish', numeric: true, disablePadding: false, label: 'Published' },\r\n            { id: 'campaign_status', numeric: true, disablePadding: false, label: 'Status' },\r\n            { id: 'campaign_size', numeric: true, disablePadding: false, label: 'Size' },\r\n            { id: 'campaign_duration', numeric: true, disablePadding: false, label: 'Duration' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n        ])\r\n\r\n        setHeadMobileCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n        ])\r\n    \r\n        setSearchCell([\r\n            { id: 'id', label: 'Id' },\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setDisplayInfo([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'publish', numeric: true, disablePadding: false, label: 'Published' },\r\n            { id: 'campaign_status', numeric: true, disablePadding: false, label: 'Status' },\r\n            { id: 'campaign_size', numeric: true, disablePadding: false, label: 'Size' },\r\n            { id: 'campaign_duration', numeric: true, disablePadding: false, label: 'Duration' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n        ])\r\n\r\n        setExcelList([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'publish', numeric: true, disablePadding: false, label: 'Published' },\r\n            { id: 'campaign_status', numeric: true, disablePadding: false, label: 'Status' },\r\n            { id: 'campaign_size', numeric: true, disablePadding: false, label: 'Size' },\r\n            { id: 'campaign_duration', numeric: true, disablePadding: false, label: 'Duration' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n        ])\r\n\r\n        setEditCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n        ])\r\n    \r\n        setSearchValue(\"name\")\r\n        \r\n    }, []);\r\n\r\n    return (\r\n    <Grid>\r\n        <Table \r\n            control={true}\r\n            excelList={excelList}\r\n            downloadExcel={true}\r\n            rowsPerPage={5}\r\n            orderBy=\"created\" \r\n            data={props.ads ? \"advertisement\" : \"campaign\"}\r\n            addItemButton={true}\r\n            addItemText={props.ads ? \"Add advertisement\":\"Add campaign\"}\r\n            addItemIcon={<AddCircleIcon/>}\r\n            folder_data={props.ads ? \"advertisement_folder\" : \"campaign_folder\"}\r\n            folder={props.folder}\r\n            displayInfo={displayInfo}\r\n            matches={matches}\r\n            editCells={editCells}\r\n            headCells={matches ? headCells : headMobileCells} \r\n            searchValue={searchValue} \r\n            searchCell={searchCell}/>\r\n    </Grid>\r\n    )\r\n\r\n}\r\n  ","import React, { useEffect } from 'react';\r\nimport Table from '../../../modules/components/Table'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport firebase from \"firebase\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport default function Index(props) {\r\n\r\n    const [headCells, setHeadCells] = React.useState([]);\r\n    const [headMobileCells, setHeadMobileCells] = React.useState([]);\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n    const [searchCell, setSearchCell] = React.useState([]);\r\n    const [displayInfo, setDisplayInfo] = React.useState([]);\r\n    const [editCells, setEditCells] = React.useState([]);\r\n    const [addCells, setAddCells] = React.useState([]);\r\n    const [addCellsName, setAddCellsName] = React.useState([]);\r\n    const matches = true;\r\n    const [folder, setFolder] = React.useState(\"default\");\r\n    const [folderList, setFolderList] = React.useState([]);\r\n\r\n    const handleSelectChange = (event) => {\r\n        setFolder(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        setHeadCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'folder', numeric: true, disablePadding: false, label: 'Group' },\r\n        ])\r\n\r\n        setHeadMobileCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n        ])\r\n    \r\n        setSearchCell([\r\n            { id: 'folder', label: 'Group' },\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setDisplayInfo([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'campaign', numeric: true, disablePadding: false, label: 'Campaign' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'refreshed', numeric: true, disablePadding: false, label: 'Refreshed' },\r\n        ])\r\n\r\n        setEditCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n        ])\r\n\r\n        setAddCells([\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setAddCellsName({ name: '', refreshed: firebase.database.ServerValue.TIMESTAMP })\r\n    \r\n        setSearchValue(\"folder\")\r\n\r\n        let folderRef = firebase.database().ref(\"station_zone\");\r\n    \r\n        folderRef.once('value', snapshot => {\r\n            if(snapshot.exists()){\r\n                let items = [];\r\n                snapshot.forEach(child => {\r\n                    var itemsVal = child.val();\r\n                    items.push(itemsVal);\r\n                })\r\n\r\n                setFolderList(items)\r\n            }\r\n        })\r\n        \r\n    }, []);\r\n\r\n    \r\n    return (\r\n    <Grid>\r\n        <Grid style={{ display: \"none\", width: \"100%\", padding: 20 }}>\r\n            <FormControl variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Zone</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={folder}\r\n                onChange={handleSelectChange}\r\n                label=\"Zone\"\r\n                >\r\n                <MenuItem value={\"default\"}>\r\n                    <em>Default</em>\r\n                </MenuItem>\r\n                {folderList.map((val, index)=>{\r\n                    return(\r\n                        <MenuItem key={\"folderlist\"+index} value={val.id}>\r\n                            <em>{val.name}</em>\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n        <Table \r\n            handleSetStation={(rows) => props.handleSetStation(rows) }\r\n            selectedStations={props.selectedStations}\r\n            allCampaign={props.allCampaign}\r\n            selectedItem={props.selectedItem}\r\n            listOnly={props.listOnly}\r\n            ads={props.ads}\r\n            control={false}\r\n            rowsPerPage={15}\r\n            orderBy=\"created\" \r\n            data=\"station\" \r\n            addItemButton={false}\r\n            addItemText=\"Add station\"\r\n            addItemIcon={<AddCircleIcon/>}\r\n            addCells={addCells}\r\n            addCellsName={addCellsName}\r\n            folder_data=\"station_zone\"\r\n            folder={folder === \"default\" ? null : folder}\r\n            displayInfo={displayInfo}\r\n            downloadExcel={false}\r\n            matches={matches}\r\n            selectStation={true}\r\n            editCells={editCells}\r\n            headCells={matches ? headCells : headMobileCells} \r\n            searchValue={searchValue} \r\n            searchCell={searchCell}/>\r\n    </Grid>\r\n    )\r\n\r\n}\r\n  ","import React, { useEffect } from 'react';\r\nimport Table from '../../../modules/components/Table'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport firebase from \"firebase\";\r\n\r\nexport default function Index(props) {\r\n\r\n    const [headCells, setHeadCells] = React.useState([]);\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n    const [searchCell, setSearchCell] = React.useState([]);\r\n    const [displayInfo, setDisplayInfo] = React.useState([]);\r\n    const [editCells, setEditCells] = React.useState([]);\r\n    const [folder, setFolder] = React.useState(\"default\");\r\n    const [folderList, setFolderList] = React.useState([]);\r\n\r\n    const handleSelectChange = (event) => {\r\n        setFolder(event.target.value);\r\n    };\r\n\r\n    const matches = false;\r\n\r\n    useEffect(() => {\r\n\r\n        setHeadCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n        ])\r\n    \r\n        setSearchCell([\r\n            { id: 'id', label: 'Id' },\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setDisplayInfo([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'size', numeric: true, disablePadding: false, label: 'Size' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'type', numeric: true, disablePadding: false, label: 'Type' },\r\n            { id: 'in_use', numeric: true, disablePadding: false, label: 'In Use' },\r\n        ])\r\n\r\n        setEditCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n        ])\r\n    \r\n        setSearchValue(\"name\")\r\n\r\n        let folderRef = firebase.database().ref(\"content_folder\");\r\n    \r\n        folderRef.once('value', snapshot => {\r\n            if(snapshot.exists()){\r\n                let items = [];\r\n                snapshot.forEach(child => {\r\n                    var itemsVal = child.val();\r\n                    items.push(itemsVal);\r\n                })\r\n\r\n                setFolderList(items)\r\n            }\r\n        })\r\n        \r\n    }, []);\r\n\r\n    return (\r\n    <Grid>  \r\n        <Grid style={{ width: \"100%\", padding: 20 }}>\r\n            <FormControl variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Folder</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={folder}\r\n                onChange={handleSelectChange}\r\n                label=\"Folder\"\r\n                >\r\n                <MenuItem value={\"default\"}>\r\n                    <em>Default</em>\r\n                </MenuItem>\r\n                {folderList.map((val, index)=>{\r\n                    return(\r\n                        <MenuItem key={\"content\"+index} value={val.id}>\r\n                            <em>{val.name}</em>\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n        \r\n        <Table \r\n            selectContent={true}\r\n            handleSetRows={(rows) => props.handleSetRows(rows) }\r\n            control={true}\r\n            rowsPerPage={5}\r\n            orderBy=\"created\" \r\n            data=\"content\" \r\n            folder_data=\"content_folder\"\r\n            folder={folder === \"default\" ? null : folder}\r\n            displayInfo={displayInfo}\r\n            matches={matches}\r\n            editCells={editCells}\r\n            headCells={headCells} \r\n            searchValue={searchValue} \r\n            searchCell={searchCell}/>\r\n    </Grid>\r\n    )\r\n    \r\n}\r\n  ","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { Typography } from '@material-ui/core';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePaginationActions from './TablePaginationActions';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Stations from '../../views/pages/Campaign/Stations'\r\nimport Contents from '../../views/pages/Campaign/Contents'\r\nimport _uniqueId from 'lodash/uniqueId';\r\nimport ReactPlayer from 'react-player'\r\nimport Dialog from './Dialog'\r\nimport { DateRange  } from 'react-date-range';\r\nimport { addDays } from 'date-fns';\r\nimport TimeRange from 'react-time-range';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport ContentPreview from './ContentPreview'\r\nimport { Tooltip } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport firebase from \"firebase\";\r\n\r\n//table head\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, numSelected, rowCount, headCells, disableCheckBox } = props;\r\n\r\n    return (\r\n        <TableHead >\r\n            <TableRow>\r\n                {disableCheckBox ? null : <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                    indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                    checked={rowCount > 0 && numSelected === rowCount}\r\n                    onChange={onSelectAllClick}\r\n                    inputProps={{ 'aria-label': 'select all' }}\r\n                />\r\n                </TableCell>}\r\n                {headCells ? headCells.map((headCell) => (\r\n                <TableCell\r\n                    style={{padding: 3}}\r\n                    key={headCell.id}\r\n                    align={'left'}\r\n                    padding={'none'}\r\n                    sortDirection={false}\r\n                >\r\n                    {headCell.label}\r\n                </TableCell>\r\n                )):null}\r\n                \r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    duration: {\r\n        \"& input::-webkit-clear-button, & input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\r\n                display: \"none\"\r\n         }\r\n    },table: {\r\n        width: \"100%\",\r\n    },\r\n    \r\n}));\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n\r\n    ...(isDragging && {\r\n        background: \"rgb(235,235,235)\"\r\n    })\r\n})\r\n\r\nconst DraggableComponent = (id, index) => (props) => {\r\n    return (\r\n        <Draggable draggableId={id} index={index}>\r\n            {(provided, snapshot) => (\r\n                <TableRow\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                    {...props}\r\n                >\r\n                    {props.children}\r\n                </TableRow>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nconst DroppableComponent = (onDragEnd) => (props) =>\r\n{\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId={'1'} direction=\"vertical\">\r\n                {(provided) => {\r\n                    return (\r\n                        <TableBody ref={provided.innerRef} {...provided.droppableProps} {...props}>\r\n                            {props.children}\r\n                            {provided.placeholder}\r\n                        </TableBody>\r\n                    )\r\n                }}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\n\r\nexport default function AddCampaign(props){\r\n\r\n    const classes = useStyles();\r\n    const [rows, setRows] = React.useState([]);\r\n    const [duration, setDuration] = React.useState(10)\r\n    const [campaignName, setCampaignName] = React.useState(\"\")\r\n    const [sequance, setSequance] = React.useState(1)\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [page2, setPage2] = React.useState(0);\r\n    const [page3, setPage3] = React.useState(0);\r\n    const [rowsPerPage2, setRowsPerPage2] = React.useState(10);\r\n    const [rowsPerPage3, setRowsPerPage3] = React.useState(10);\r\n    const [selecteditem, setSelecteditem] = React.useState(rows[0]);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [dialogLoading, setDialogLoading] = React.useState(false);\r\n    const [fullScreenDialog, setFullScreenDialog] = React.useState(false);\r\n    const [dialogTitle, setDialogTitle] = React.useState(\"\");\r\n    const [dialogDes, setDialogDes] = React.useState(\"\");\r\n    const [agreeButton, setAgreeButton] = React.useState(false);\r\n    const [globalSchedule, setGlobalSchedule] = React.useState(false);\r\n    const [option, setOptions] = React.useState(\"\");\r\n    const [allAds, setAllAds] = React.useState([]);\r\n    const [parallel, setParallel] = React.useState(1);\r\n    const [selectedAds, setSelectedAds] = React.useState(\"none\");\r\n    const [selectionRange, setSelectionRange] = React.useState({\r\n        startDate: new Date(),\r\n        endDate: addDays(new Date(), 1),\r\n        key: 'selection',\r\n    });\r\n    const [allFolder, setAllFolder] = React.useState([]);\r\n    const [allStation, setAllStation] = React.useState([]);\r\n\r\n    const [timeRange, setTimeRange] = React.useState({\r\n        startTime: new Date(new Date().setHours(0,0,0,0)),\r\n        endTime: new Date(new Date().setHours(0,0,0,0)),\r\n    });\r\n\r\n    const [globalDateTime, setGlobalDateTime] = React.useState(null);\r\n\r\n    const [selectedStations, setSelectedStations] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        let folderRef = firebase.database().ref(\"station_zone\");\r\n\r\n        folderRef.once('value', snapshot => {\r\n          if(snapshot.exists()){\r\n            var allfolders = []\r\n            snapshot.forEach(child => {\r\n        \r\n              var itemsVal = child.val();\r\n              allfolders.push(itemsVal);\r\n              \r\n              \r\n            })\r\n            setAllFolder(allfolders)\r\n          }\r\n        })\r\n\r\n        let stationRef = firebase.database().ref(\"station\");\r\n\r\n        stationRef.once('value', snapshot => {\r\n          if(snapshot.exists()){\r\n            var allstations = []\r\n            var _selectedStations = []\r\n            snapshot.forEach(child => {\r\n        \r\n              var itemsVal = child.val();\r\n              allstations.push(itemsVal);\r\n              \r\n              if(props.data === \"advertisement\"){\r\n                if(props.selectedItem && itemsVal.advertisement === props.selectedItem.id){\r\n                    _selectedStations.push(itemsVal)\r\n                  }\r\n              }\r\n              else\r\n              {\r\n                if(props.selectedItem && itemsVal.campaign === props.selectedItem.id){\r\n                    _selectedStations.push(itemsVal)\r\n                  }\r\n              }\r\n             \r\n              \r\n            })\r\n            setSelectedStations(_selectedStations)\r\n            setAllStation(allstations)\r\n          }\r\n        })\r\n\r\n        let adsRef = firebase.database().ref(\"advertisement\");\r\n\r\n        adsRef.once('value', snapshot => {\r\n            if(snapshot.exists()){\r\n                var itemsAds = []\r\n                snapshot.forEach(child => {\r\n            \r\n                    var itemsVal = child.val();\r\n                    itemsAds.push(itemsVal);\r\n                    \r\n                    \r\n                })\r\n\r\n                setAllAds(itemsAds)\r\n\r\n            }\r\n        })\r\n\r\n        if(props.selectedItem){\r\n\r\n            setRows(props.selectedItem.content)\r\n            setSelecteditem(props.selectedItem.content[0])\r\n            setDuration(props.selectedItem.content[0].duration ? props.selectedItem.content[0].duration : 0)\r\n            setCampaignName(props.selectedItem.name)\r\n            setSelectedAds(props.selectedItem.advertisement ? props.selectedItem.advertisement : null)\r\n            setParallel(props.selectedItem.parallel ? props.selectedItem.parallel : 1)\r\n           \r\n            if(props.selectedItem.start_date &&\r\n                props.selectedItem.end_date &&\r\n                props.selectedItem.start_time && \r\n                props.selectedItem.end_time ){\r\n                    var newDateTime = {\r\n                        startDate: props.selectedItem.start_date ? props.selectedItem.start_date : new Date(),\r\n                        endDate: props.selectedItem.end_date ? props.selectedItem.end_date : addDays(new Date(), 1),\r\n                        startTime: props.selectedItem.start_time ? props.selectedItem.start_time : new Date(new Date().setHours(0,0,0,0)),\r\n                        endTime: props.selectedItem.end_time ? props.selectedItem.end_time : new Date(new Date().setHours(0,0,0,0)),\r\n                    }\r\n                    setGlobalDateTime(newDateTime)\r\n                }\r\n        }\r\n\r\n\r\n    }, [props]);\r\n\r\n    const onChangeduration = (e) => {\r\n        const newValue = Math.min(Math.max(e.target.value, 1), 100)\r\n        setRowsDuration(newValue)\r\n        setDuration(previousValue => newValue)\r\n    }\r\n\r\n    const addDuration = () => {\r\n        setDuration(prev => {\r\n\r\n            var newPrev = 0;\r\n\r\n            if(prev < 100){\r\n                newPrev = prev + 1\r\n            }\r\n            else{\r\n                newPrev = prev\r\n            }\r\n\r\n            setRowsDuration(newPrev)\r\n\r\n            return newPrev\r\n        })\r\n    }\r\n\r\n    const minusDuration = () => {\r\n        setDuration(prev => {\r\n            var newPrev = 0;\r\n\r\n            if(prev > 1){\r\n                newPrev = prev - 1\r\n            }\r\n            else{\r\n                newPrev = prev\r\n            }\r\n\r\n            setRowsDuration(newPrev)\r\n\r\n            return newPrev\r\n        })\r\n    }\r\n\r\n    const setRowsDuration = (value) => {\r\n        rows[rows.map(val=>val).indexOf(selecteditem)].duration = value;\r\n    }\r\n\r\n    //table\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangePage2 = (event, newPage) => {\r\n        setPage2(newPage);\r\n    };\r\n\r\n    const handleChangePage3 = (event, newPage) => {\r\n        setPage3(newPage);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeRowsPerPage2 = (event) => {\r\n        setRowsPerPage2(parseInt(event.target.value, 10));\r\n        setPage2(0);\r\n    };\r\n\r\n    const handleChangeRowsPerPage3 = (event) => {\r\n        setRowsPerPage3(parseInt(event.target.value, 10));\r\n        setPage3(0);\r\n    };\r\n    \r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n          const newSelecteds = rows.map((n) => n);\r\n          setSelected(newSelecteds);\r\n          return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n    \r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n    \r\n    const handleCheckBoxClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n    \r\n        if (selectedIndex === -1) {\r\n          newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n          newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n          newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n          newSelected = newSelected.concat(\r\n            selected.slice(0, selectedIndex),\r\n            selected.slice(selectedIndex + 1),\r\n          );\r\n        }\r\n    \r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const onClickRow = (row) => {\r\n        setSelecteditem(row)\r\n        setSequance(rows.map(val=>val).indexOf(row)+1)\r\n        setDuration(rows[rows.map(val=>val).indexOf(row)].duration)\r\n    }\r\n\r\n    const onDragEnd = (result) => {\r\n\r\n        if (!result.destination) {\r\n            return\r\n        }\r\n\r\n        const items = reorder(\r\n            rows,\r\n            result.source.index,\r\n            result.destination.index\r\n        )\r\n\r\n        \r\n        setRows(items);\r\n        setSequance(items.map(val=>val).indexOf(selecteditem)+1)\r\n    }\r\n\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list)\r\n        const [removed] = result.splice(startIndex, 1)\r\n        result.splice(endIndex, 0, removed)\r\n\r\n        return result\r\n    }\r\n\r\n    const applySequance = () => {\r\n        const items = reorder(\r\n            rows,\r\n            rows.map(val=>val).indexOf(selecteditem),\r\n            sequance-1\r\n        )\r\n        setRows(items);\r\n    }\r\n\r\n    const onChangeSquance = (e) => {\r\n        const newValue = Math.min(Math.max(e.target.value, 1), rows.length)\r\n        setSequance(previousValue => newValue)\r\n    }\r\n\r\n    const onClickUp = () => {\r\n        if(rows.map(val=>val).indexOf(selecteditem) !== 0){\r\n            const items = reorder(\r\n                rows,\r\n                rows.map(val=>val).indexOf(selecteditem),\r\n                (sequance-1)-1\r\n            )\r\n            setRows(items);\r\n            setSequance(sequance-1)\r\n        }\r\n    }\r\n\r\n    const onClickDown = () => {\r\n        if(rows.map(val=>val).indexOf(selecteditem) !== rows.length - 1){\r\n            const items = reorder(\r\n                rows,\r\n                rows.map(val=>val).indexOf(selecteditem),\r\n                (sequance-1)+1\r\n            )\r\n            setRows(items);\r\n            setSequance(sequance+1)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false)\r\n    };\r\n\r\n    const addContent = () => {\r\n        setDialogLoading(false)\r\n        setAgreeButton(false)\r\n        setDialogTitle(\"Add Content\")\r\n        setOptions(\"addItem\")\r\n        setDialogDes(\"\")\r\n        setFullScreenDialog(false)\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    const addStation = () => {\r\n        setDialogLoading(false)\r\n        setAgreeButton(false)\r\n        setDialogTitle(\"Select Sation\")\r\n        setOptions(\"selectStation\")\r\n        setDialogDes(\"\")\r\n        setFullScreenDialog(false)\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    const handleSetRows = (row) => {\r\n        \r\n        var newRows = [];\r\n        row.forEach((child, index) => {\r\n            var newChild = child;\r\n            newChild.uid = child.id+(rows.length + _uniqueId('prefix-'));\r\n            if(child.type === \"image/jpeg\"){\r\n                newChild.duration = 10\r\n            }\r\n            \r\n            newRows.push(newChild)\r\n        })\r\n\r\n        if(!selecteditem){\r\n\r\n            setSelecteditem(newRows[0])\r\n            setDuration(newRows[0].type === \"image/jpeg\" ? 10 : 0)\r\n        }\r\n        setRows(prev => [...prev, ...newRows])\r\n        setOpenDialog(false)\r\n        setSelected([])\r\n    }\r\n\r\n    const handleSetStation = (stationRows) => {\r\n        setSelectedStations(stationRows)\r\n        setOpenDialog(false)\r\n    }\r\n\r\n    const campaignDurations = () => {\r\n\r\n        var totalduration = 0\r\n        var _totalCampaignDuration = 0\r\n        var campaignPer = 100\r\n        \r\n        if(MixRows().length > 0 && selectedAds !== null){\r\n            totalduration = MixRows().map(val => val.duration).reduce((prev, next) => prev + next);\r\n            _totalCampaignDuration = MixRows().map(val => !val.highlight ? val.duration : 0).reduce((prev, next) => prev + next);\r\n            campaignPer = (_totalCampaignDuration / totalduration)*100\r\n        }\r\n    \r\n\r\n        return campaignPer.toFixed(2);\r\n    }\r\n\r\n    const adsDurations = () => {\r\n        var totalduration = 0\r\n        var _totalCampaignDuration = 0\r\n        var campaignPer = 0\r\n        \r\n        if(MixRows().length > 0 && selectedAds !== null){\r\n            totalduration = MixRows().map(val => val.duration).reduce((prev, next) => prev + next);\r\n            _totalCampaignDuration = MixRows().map(val => val.highlight ? val.duration : 0).reduce((prev, next) => prev + next);\r\n            campaignPer = (_totalCampaignDuration / totalduration)*100\r\n        }\r\n\r\n\r\n        return campaignPer.toFixed(2);\r\n    }\r\n\r\n    const onClickDelete = () => {\r\n        var newRows = rows.filter(item => !selected.includes(item))\r\n\r\n        if(newRows.length === 0){\r\n            setSelecteditem(null)\r\n            setDuration(0)\r\n        }\r\n        else if(newRows.map(val => val).indexOf(selecteditem) === -1){\r\n            setSelecteditem(newRows[0])\r\n            setDuration(newRows[0].duration)\r\n            setSequance(1)\r\n        }\r\n\r\n        setRows(newRows)\r\n        setSelected([])\r\n    }\r\n\r\n    const publishCampaign = () => {\r\n        setDialogLoading(false)\r\n        setAgreeButton(true)\r\n        setDialogTitle(\"Publish\")\r\n        setOptions(\"publishStation\")\r\n        \r\n        if(selectedStations.length > 0){\r\n            setDialogDes(\"Are you sure want to publish to these stations?\")\r\n        }\r\n        else{\r\n            setDialogDes(\"No stations added\")\r\n        }\r\n        \r\n        setFullScreenDialog(false)\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    const saveCampaign = () => {\r\n        setDialogLoading(false)\r\n        setAgreeButton(true)\r\n        setDialogTitle(\"Save\")\r\n        setOptions(\"saveStation\")\r\n        \r\n        if(selectedStations.length > 0){\r\n            setDialogDes(\"Are you sure want to save to these stations?\")\r\n        }\r\n        else{\r\n            setDialogDes(\"No stations added\")\r\n        }\r\n        \r\n        setFullScreenDialog(false)\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    const savedCampaign = (publish) => {\r\n\r\n        if(props.option === \"edit\"){\r\n    \r\n            firebase.database().ref(props.data +  \"/\" + props.selectedItem.id).update({ \r\n                name:  campaignName,\r\n                content: rows,\r\n                updated: firebase.database.ServerValue.TIMESTAMP,\r\n                publish: publish,\r\n                start_date: globalDateTime? globalDateTime.startDate : null,\r\n                end_date: globalDateTime? globalDateTime.endDate : null,\r\n                start_time : globalDateTime? globalDateTime.startTime : null,\r\n                end_time: globalDateTime? globalDateTime.endTime : null,\r\n                parallel: parseInt(parallel) \r\n            });\r\n\r\n            if(publish){\r\n                firebase.database().ref(\"log_\" + props.data).push({  user: firebase.auth().currentUser.email, item: props.selectedItem, status: \"updated_published\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n            }\r\n            else\r\n            {\r\n                firebase.database().ref(\"log_\" + props.data).push({  user: firebase.auth().currentUser.email, item: props.selectedItem, status: \"updated\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n            }\r\n            \r\n            if(selectedStations.length > 0){\r\n\r\n                if(props.data === \"advertisement\"){\r\n                    selectedStations.forEach(val=>{\r\n                        firebase.database().ref(\"station/\" + val.id).update({ advertisement: props.selectedItem.id })\r\n                    })\r\n                }\r\n                else{\r\n                    selectedStations.forEach(val=>{\r\n                        firebase.database().ref(\"station/\" + val.id).update({ campaign: props.selectedItem.id })\r\n                    })\r\n                }\r\n                \r\n            }\r\n           \r\n        }\r\n        else\r\n        {\r\n            var addItem = {};\r\n            var newPostKey = firebase.database().ref().child(props.data).push().key;\r\n    \r\n            addItem['created'] = firebase.database.ServerValue.TIMESTAMP;\r\n            addItem['id'] = newPostKey;\r\n            addItem['user'] = firebase.auth().currentUser.uid;\r\n            addItem['name'] = campaignName;\r\n            addItem['content'] = rows;\r\n            addItem['publish'] = publish;\r\n            addItem['start_date'] = globalDateTime ? globalDateTime.startDate : null\r\n            addItem['end_date'] = globalDateTime ? globalDateTime.endDate : null\r\n            addItem['start_time'] = globalDateTime ? globalDateTime.startTime : null\r\n            addItem['end_date'] = globalDateTime ? globalDateTime.endTime : null\r\n            addItem['parallel'] = parseInt(parallel)\r\n    \r\n            var updates = {};\r\n            updates[props.data + \"/\" + newPostKey] = addItem;\r\n    \r\n            firebase.database().ref().update(updates);\r\n\r\n            if(publish){\r\n                firebase.database().ref(\"log_\" + props.data).push({  user: firebase.auth().currentUser.email, item: addItem, status: \"added_published\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n            }\r\n            else{\r\n                firebase.database().ref(\"log_\" + props.data).push({  user: firebase.auth().currentUser.email, item: addItem, status: \"added\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n            }\r\n            \r\n            if(selectedStations.length > 0){\r\n                if(props.data === \"advertisement\"){\r\n                    selectedStations.forEach(val=>{\r\n                        firebase.database().ref(\"station/\" + val.id).update({ advertisement: newPostKey })\r\n                    })\r\n                }\r\n                else{\r\n                    selectedStations.forEach(val=>{\r\n                        firebase.database().ref(\"station/\" + val.id).update({ campaign: newPostKey })\r\n                    })\r\n                }\r\n            }\r\n\r\n        }\r\n        \r\n\r\n        props.handleClose()\r\n    }\r\n\r\n    const onChangeName = (e) => {\r\n        setCampaignName(e.target.value)\r\n    }\r\n\r\n    const setContentSchedule = (global) => {\r\n\r\n        if(!global){\r\n            if(rows.map(val => val).indexOf(selecteditem) !== -1){\r\n                if( rows[rows.map(val => val).indexOf(selecteditem)].start_date &&  rows[rows.map(val => val).indexOf(selecteditem)].end_date)\r\n                {\r\n                    setSelectionRange({\r\n                        startDate: new Date(rows[rows.map(val => val).indexOf(selecteditem)].start_date),\r\n                        endDate: new Date(rows[rows.map(val => val).indexOf(selecteditem)].end_date),\r\n                        key: 'selection',\r\n                    })\r\n    \r\n                    \r\n                }\r\n                else\r\n                {\r\n                    setSelectionRange({\r\n                        startDate: new Date(),\r\n                        endDate: addDays(new Date(), 1),\r\n                        key: 'selection',\r\n                    })\r\n                    \r\n                }\r\n    \r\n                if( rows[rows.map(val => val).indexOf(selecteditem)].start_time &&  rows[rows.map(val => val).indexOf(selecteditem)].end_time)\r\n                {\r\n                    setTimeRange({\r\n                        startTime: new Date(rows[rows.map(val => val).indexOf(selecteditem)].start_time),\r\n                        endTime: new Date(rows[rows.map(val => val).indexOf(selecteditem)].end_time)\r\n                    })\r\n                }\r\n                else{\r\n                    setTimeRange({\r\n                        startTime: new Date(new Date().setHours(0,0,0,0)),\r\n                        endTime: new Date(new Date().setHours(0,0,0,0)),\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(globalDateTime){\r\n                setSelectionRange({\r\n                    startDate: new Date(globalDateTime.startDate),\r\n                    endDate: new Date(globalDateTime.endDate),\r\n                    key: 'selection',\r\n                })\r\n    \r\n                setTimeRange({\r\n                    startTime: new Date(globalDateTime.startTime),\r\n                    endTime: new Date(globalDateTime.endTime),\r\n                })\r\n            }\r\n            else\r\n            {\r\n                setSelectionRange({\r\n                    startDate: new Date(),\r\n                    endDate: addDays(new Date(), 1),\r\n                    key: 'selection',\r\n                })\r\n    \r\n                setTimeRange({\r\n                    startTime: new Date(new Date().setHours(0,0,0,0)),\r\n                    endTime: new Date(new Date().setHours(0,0,0,0)),\r\n                })\r\n            }\r\n            \r\n        }\r\n        \r\n\r\n        setDialogLoading(false)\r\n        setAgreeButton(true)\r\n        setDialogTitle(global ? \"Global Schedule\" : \"Schedule\")\r\n        setOptions(\"setContentSchedule\")\r\n        setDialogDes(\"\")\r\n        setFullScreenDialog(false)\r\n        setGlobalSchedule(global)\r\n        setOpenDialog(true)\r\n        \r\n    }\r\n\r\n    const handleAgree = () => {\r\n        \r\n        if(option === \"publishStation\"){\r\n            savedCampaign(true)\r\n        }\r\n        else if(option === \"saveStation\"){\r\n            savedCampaign(false)\r\n        }\r\n        else\r\n        {\r\n            if(!globalSchedule){\r\n                if(rows.map(val => val).indexOf(selecteditem) !== -1){\r\n                    rows[rows.map(val => val).indexOf(selecteditem)].start_date = selectionRange.startDate;\r\n                    rows[rows.map(val => val).indexOf(selecteditem)].end_date = selectionRange.endDate;\r\n                    rows[rows.map(val => val).indexOf(selecteditem)].start_time = timeRange.startTime;\r\n                    rows[rows.map(val => val).indexOf(selecteditem)].end_time = timeRange.endTime;\r\n                }\r\n            }\r\n            else{\r\n                var newDateTime={\r\n                    startDate: selectionRange.startDate,\r\n                    endDate: selectionRange.endDate,\r\n                    startTime: timeRange.startTime,\r\n                    endTime: timeRange.endTime,\r\n                }\r\n                setGlobalDateTime(newDateTime)\r\n            }\r\n        }\r\n        \r\n        \r\n        setOpenDialog(false)\r\n    }\r\n    \r\n    const onChangeDateRange = (ranges) => {\r\n        setSelectionRange(ranges.selection)\r\n    }\r\n\r\n    const renderContentSchedule = () => {\r\n        \r\n        return(\r\n            <Grid>\r\n                <TimeRange \r\n                    startMoment={new Date(timeRange.startTime)}\r\n                    endMoment={new Date(timeRange.endTime)}\r\n                    onChange={onChangeTimeRange}\r\n                />\r\n                <DateRange \r\n                    direction=\"vertical\"\r\n                    scroll={{ enabled: true }}\r\n                    editableDateInputs={true}\r\n                    ranges={[selectionRange]}\r\n                    onChange={onChangeDateRange}\r\n                    />\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const onChangeTimeRange = (timerange) => {\r\n\r\n        setTimeRange({\r\n            startTime: new Date(timerange.startTime),\r\n            endTime: new Date(timerange.endTime)\r\n        })\r\n    }\r\n\r\n    const onClickPreview = () => {\r\n        setDialogLoading(false)\r\n        setAgreeButton(false)\r\n        setDialogTitle(\"Preview\")\r\n        setOptions(\"playPreview\")\r\n        setDialogDes(\"\")\r\n        setFullScreenDialog(false)\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    const renderComponent = () => {\r\n        \r\n        if(option === \"setContentSchedule\"){\r\n            return(renderContentSchedule())\r\n        }\r\n        else if(option === \"selectStation\"){\r\n            return(\r\n                <Stations selectedStations={selectedStations} handleSetStation={(rows) => handleSetStation(rows)} />\r\n            )\r\n        }\r\n        else if(option === \"addItem\"){\r\n            return(<Contents handleSetRows={(rows) => handleSetRows(rows)}/>)\r\n        }\r\n        else if(option === \"playPreview\"){\r\n            return(\r\n                <ContentPreview withinDateTime={withinDateTime} rows={rows}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    const withinDateTime = (startDate, endDate, startTime, endTime) => {\r\n        \r\n       \r\n        if(startDate && endDate && startTime && endTime){\r\n\r\n            var start_date = new Date(new Date(startDate).getFullYear(), new Date(startDate).getMonth(), new Date(startDate).getDate());\r\n            var end_date = new Date(new Date(endDate).getFullYear(), new Date(endDate).getMonth(), new Date(endDate).getDate());\r\n            var current_date = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\r\n            var current_time = new Date();\r\n\r\n            var start_time = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), new Date(startTime).getHours(), new Date(startTime).getMinutes());\r\n            var end_time = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), new Date(endTime).getHours(), new Date(endTime).getMinutes());\r\n\r\n            if(start_date <= current_date && end_date >= current_date && new Date(start_time).getHours() === new Date(end_time).getHours() && new Date(startTime).getMinutes() === new Date(endTime).getMinutes()){\r\n                return true\r\n            }\r\n\r\n            if(start_date <= current_date && end_date >= current_date && current_time >= start_time && current_time <= end_time){\r\n                return true\r\n            }\r\n\r\n            return false\r\n        }\r\n        else\r\n        {\r\n            return true\r\n        }\r\n    }\r\n\r\n    const ExpiredDateTime = (startDate, endDate, startTime, endTime) => {\r\n        \r\n       \r\n        if(startDate && endDate && startTime && endTime){\r\n\r\n            var start_date = new Date(new Date(startDate).getFullYear(), new Date(startDate).getMonth(), new Date(startDate).getDate());\r\n            var end_date = new Date(new Date(endDate).getFullYear(), new Date(endDate).getMonth(), new Date(endDate).getDate());\r\n            var current_date = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\r\n\r\n            if(start_date <= current_date && end_date >= current_date)\r\n            {\r\n                return true\r\n            }\r\n\r\n            if(start_date >= current_date){\r\n                return true\r\n            }\r\n\r\n            return false\r\n        }\r\n        else\r\n        {\r\n            return true\r\n        }\r\n    }\r\n\r\n    const renderTotalSize = () => {\r\n\r\n        if(rows.length > 1){\r\n            var totalSize = rows.map(val => val.size).reduce((prev, next) => prev + next);\r\n            return bytesToSize(totalSize)\r\n        }\r\n        else if(rows.length === 1){\r\n            return bytesToSize(rows[0].size)\r\n        }\r\n\r\n        return \"No Content\"\r\n    }\r\n\r\n    const renderTotalDuration = () => {\r\n        if(rows.length > 1){\r\n            var totalDuration = rows.map(val => val.duration).reduce((prev, next) => prev + next);\r\n            return secondsToHms(totalDuration)\r\n        }\r\n        else if(rows.length === 1){\r\n            return secondsToHms(rows[0].duration)\r\n        }\r\n\r\n        return \"No Content\"\r\n    }\r\n\r\n    const bytesToSize = (bytes) => {\r\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes === 0) return '0 Byte';\r\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    };\r\n\r\n    const secondsToHms = (d)=> {\r\n        d = Number(d);\r\n        var h = Math.floor(d / 3600);\r\n        var m = Math.floor(d % 3600 / 60);\r\n        var s = Math.floor(d % 3600 % 60);\r\n    \r\n        var hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\";\r\n        var mDisplay = m > 0 ? m + (m === 1 ? \" min, \" : \" mins, \") : \"\";\r\n        var sDisplay = s > 0 ? s + (s === 1 ? \" sec\" : \" secs\") : \"\";\r\n        return hDisplay + mDisplay + sDisplay; \r\n      }\r\n\r\n    const handleIntervalChange = (event) => {\r\n        setParallel(event.target.value)\r\n    }\r\n\r\n    const MixRows = () => {\r\n        var currentAds = allAds.map(val=> val.id).indexOf(selectedAds)\r\n        var newRows = []\r\n        var count = 0\r\n        var countAds = 0\r\n        var countParallel = parallel\r\n        var totalNum = 0\r\n\r\n        if(currentAds !== -1 && rows.length > 0){\r\n\r\n            if(allAds[currentAds].content.length >= rows.length){\r\n                if(allAds[currentAds].content.length % 2 !== 0){\r\n                    totalNum = (allAds[currentAds].content.length + 1)*(parseInt(parallel)+1)\r\n                }\r\n                else\r\n                {\r\n                    totalNum = allAds[currentAds].content.length*(parseInt(parallel)+1)\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(rows.length % 2 !== 0){\r\n                    totalNum = (rows.length + 1)*(parseInt(parallel)+1)\r\n                }\r\n                else\r\n                {\r\n                    totalNum = rows.length*(parseInt(parallel)+1)\r\n                }\r\n            }\r\n           \r\n\r\n            for (let i = 0; i < totalNum; i++) \r\n            {\r\n                if(countParallel > parallel - 1){\r\n\r\n                    countParallel = 0\r\n\r\n                    if(countAds > allAds[currentAds].content.length -1){\r\n                        countAds = 0\r\n                    }\r\n\r\n                    var adsContent = allAds[currentAds].content[countAds]\r\n                    adsContent.highlight = true\r\n    \r\n                    newRows.push(adsContent)\r\n                    countAds++\r\n\r\n                }\r\n                else\r\n                {\r\n                    if(count > rows.length -1){\r\n                        count = 0\r\n                    }\r\n    \r\n                    newRows.push(rows[count])\r\n                    count++\r\n                    countParallel++\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return newRows\r\n    }\r\n\r\n    const handleAdvertisementChange = (event) => {\r\n\r\n        setPage3(0)\r\n        setRowsPerPage3(10)\r\n        setSelectedAds(event.target.value === \"none\" ? null : event.target.value)\r\n    }\r\n    \r\n    return(      \r\n        <Grid style={{ marginTop: 20 }}>\r\n            <Dialog \r\n                agreeTxt={\"Yes\"}\r\n                disagreeTxt={\"No\"}\r\n                description={dialogDes}\r\n                title={dialogTitle}\r\n                open={openDialog} \r\n                agreeButton={agreeButton}\r\n                fullScreenDialog={fullScreenDialog}\r\n                option={option}\r\n                dialogLoading={dialogLoading}\r\n                handleAgree={handleAgree}\r\n                component={renderComponent()}\r\n                handleClose={handleClose}/>\r\n          \r\n            <Grid container>\r\n            \r\n            <Grid item lg={4} xs={12} >\r\n                <Grid>\r\n                    <Grid container style={{ paddingLeft: 20, paddingRight: 20, paddingBottom:10 }}>\r\n                        <Grid item xs={12}>\r\n                            <Button onClick={addContent} color=\"primary\" style={{ width: \"100%\" , height: \"100%\"}} \r\n                            startIcon={<AddCircleIcon/>} \r\n                            disableElevation  variant=\"contained\">Add Content</Button>\r\n                    </Grid>\r\n\r\n                 </Grid>\r\n            </Grid>\r\n                \r\n            \r\n            <Grid container spacing={2} style={{ display: \"flex\", justifyContent: \"center\", paddingLeft: 20, paddingRight: 20, paddingBottom: 10}}>\r\n                <Grid item md={6} xs={4} style={{ display: \"flex\" }}>\r\n                    <Grid  style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                        <TextField\r\n                            disabled={rows.length > 0 && selecteditem ? rows.map(val => val).indexOf(selecteditem) !== -1 && selecteditem.type ===\"image/jpeg\" ? false : true : true} \r\n                            className={classes.duration}\r\n                            label=\"Duration\"\r\n                            type=\"number\"\r\n                            onChange={onChangeduration}\r\n                            value={rows.length > 0 && selecteditem ? !rows.map(val => val).indexOf(selecteditem) !== -1 && selecteditem.type ===\"image/jpeg\" ? duration : 0 : 0}\r\n                            variant=\"outlined\"\r\n                            />\r\n                    </Grid>\r\n                    <Grid style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\"}}>\r\n                        <IconButton style={{ marginBottom: -5}} \r\n                        disabled={rows.length > 0 && selecteditem ? rows.map(val => val).indexOf(selecteditem) !== -1 && selecteditem.type ===\"image/jpeg\" ? false : true : true} \r\n                        onClick={addDuration}>\r\n                            <AddCircleIcon  style={{ color: rows.length > 0 && selecteditem ? rows.map(val => val).indexOf(selecteditem) !== -1 && selecteditem.type ===\"image/jpeg\" ? \"#556ee6\":\"#9f9f9f\" : \"#9f9f9f\" }}/>\r\n                        </IconButton>\r\n                        <IconButton \r\n                        \r\n                        disabled={rows.length > 0 && selecteditem ? rows.map(val => val).indexOf(selecteditem) !== -1 && selecteditem.type ===\"image/jpeg\" ? false : true : true} \r\n                         onClick={minusDuration}>\r\n                            <RemoveCircleIcon style={{ color: rows.length > 0 && selecteditem ? rows.map(val => val).indexOf(selecteditem) !== -1 && selecteditem.type ===\"image/jpeg\" ? \"#556ee6\":\"#9f9f9f\" : \"#9f9f9f\"}}/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n\r\n                <Grid  md={6} item xs={5} style={{ display: \"flex\", }}>\r\n                 <Button onClick={()=>setContentSchedule(false)} disabled={rows.length > 0 ? false : true}  color=\"primary\" style={{ width: \"100%\"}} \r\n                        startIcon={<QueryBuilderIcon/>} \r\n                        disableElevation  variant=\"outlined\">\r\n                            {\"Content Schedule\"}\r\n                            </Button>\r\n                </Grid>\r\n                <Grid item  md={12} xs={3} style={{ display: \"flex\", paddingTop: 7, paddingBottom: 7 }}>\r\n                    <Button disabled={rows.length > 0 ? false : true}  color=\"primary\" style={{ width: \"100%\" , height: \"100%\"}} \r\n                    startIcon={<DeleteIcon/>} \r\n                    onClick={onClickDelete}\r\n                    disableElevation  variant=\"outlined\">Delete</Button>\r\n                </Grid>\r\n                   \r\n            </Grid>\r\n\r\n            <Grid style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" , paddingLeft: 20, paddingRight: 20, paddingBottom: 10}}>\r\n                <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Content Schedule Status</Typography>\r\n                <Grid>\r\n                    <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Date: </Typography>\r\n                    <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\" }} variant=\"caption\">{\r\n                        selecteditem ? rows[rows.map(val => val).indexOf(selecteditem)].start_date ? \r\n                        \"From \" + \r\n                        new Intl.DateTimeFormat('en-GB', {year: 'numeric',day: '2-digit',  month: 'long' }).format(new Date(rows[rows.map(val => val).indexOf(selecteditem)].start_date))\r\n                        + \" to \" +\r\n                        new Intl.DateTimeFormat('en-GB', {year: 'numeric',day: '2-digit',  month: 'long' }).format(new Date(rows[rows.map(val => val).indexOf(selecteditem)].end_date))\r\n                        : \"No schedule\" : \"No schedule\"}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid>\r\n                    <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Time: </Typography>\r\n                    <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\" }} variant=\"caption\">{\r\n                                selecteditem ? rows[rows.map(val => val).indexOf(selecteditem)].start_time && rows[rows.map(val => val).indexOf(selecteditem)].end_time? \r\n                                \"From \" + \r\n                                new Intl.DateTimeFormat('en-GB', {hour: 'numeric',minute: 'numeric' }).format(new Date(rows[rows.map(val => val).indexOf(selecteditem)].start_time))\r\n                                + \" to \" +\r\n                                new Intl.DateTimeFormat('en-GB', {hour: 'numeric',minute: 'numeric' }).format(new Date(rows[rows.map(val => val).indexOf(selecteditem)].end_time))\r\n                                : \"No schedule\" : \"No schedule\"}\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid container style={{ display: \"flex\", paddingLeft: 20, paddingRight: 20, paddingBottom: 5}}>\r\n                <Grid item xs={5} style={{ display: \"flex\" }}>\r\n                    <Grid  style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                        <TextField\r\n                            disabled={rows.length > 1 ? false : true} \r\n                            className={classes.duration}\r\n                            label=\"Sequance\"\r\n                            type=\"number\"\r\n                            onChange={onChangeSquance}\r\n                            value={rows.length > 0 ? sequance : 0}\r\n                            variant=\"outlined\"\r\n                            />\r\n                    </Grid>\r\n                    <Grid style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\"}}>\r\n                        <IconButton disabled={rows.length > 1 ? false : true} style={{ marginBottom: -5}} onClick={onClickUp}>\r\n                            <KeyboardArrowUpIcon  style={{ color: selected.length > 0 ? \"#556ee6\":\"#9f9f9f\" }}/>\r\n                        </IconButton>\r\n                        <IconButton disabled={rows.length > 1 ? false : true} onClick={onClickDown}>\r\n                            <KeyboardArrowDownIcon style={{ color: selected.length > 0 ? \"#556ee6\":\"#9f9f9f\" }}/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n                <Grid item xs={7} style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 7, paddingBottom: 7}}>\r\n                    <Button disabled={rows.length > 1 ? false : true} onClick={applySequance} color=\"default\" style={{ width: \"100%\" , height: \"100%\"}} \r\n                            disableElevation  variant=\"contained\">Apply Sequence</Button>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            <Grid container style={{ display: \"flex\", paddingLeft: 20, paddingRight: 20, paddingBottom: 5}}>\r\n                <Grid container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\r\n                    <Grid item xs={6} style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                        <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Total Size: </Typography>\r\n                        <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", paddingLeft: 5 }} variant=\"caption\">\r\n                            {renderTotalSize()}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                        <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Total Duration: </Typography>\r\n                        <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", paddingLeft: 5 }} variant=\"caption\">\r\n                            {renderTotalDuration()}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container style={{ opacity: rows.length > 0 ? 1:.5, display: \"flex\", flexDirection: \"column\", paddingLeft: 20, paddingRight: 20, paddingBottom: 10}}>\r\n            <Typography variant=\"caption\">Drag the contents to change sequence</Typography>\r\n            </Grid>\r\n\r\n            <Grid style={{ opacity: rows.length > 0 ? 1:.5, display:\"flex\", flexDirection:\"column\", justifyContent: \"center\", paddingBottom: 20 }}>\r\n               \r\n                <TableContainer>\r\n                    <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                        <EnhancedTableHead\r\n                            \r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            rowCount={rows.length}\r\n                            headCells={[\r\n                            { id: 'no', numeric: false, disablePadding: false, label: 'No.' },\r\n                            { id: 'status', numeric: false, disablePadding: false, label: 'Stat' },\r\n                            { id: 'thumbnail', numeric: false, disablePadding: false, label: '' },\r\n                            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n                            { id: 'selected', numeric: true, disablePadding: false, label: '' }]}\r\n                        />\r\n                        \r\n                        <TableBody component={DroppableComponent(onDragEnd)}>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row, index) => {\r\n                            const isItemSelected = isSelected(row);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n                            var scheduled = null;\r\n                            \r\n                            if(row.start_date && row.end_date && row.start_time && row.end_time){\r\n                                if(ExpiredDateTime(row.start_date, row.end_date, row.start_time, row.end_time)){\r\n                                    scheduled = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    scheduled = false;\r\n                                }\r\n                            }\r\n                            \r\n                            return(\r\n                            <TableRow hover\r\n                            component={DraggableComponent(row.uid, index)}\r\n                            key={labelId}\r\n                            role=\"checkbox\"\r\n                            aria-checked={isItemSelected}\r\n                            tabIndex={-1}\r\n                            onClick={()=> onClickRow(row)}\r\n                            \r\n                            selected={isItemSelected} >\r\n                            <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                onClick={(event) => handleCheckBoxClick(event, row)}\r\n                                checked={isItemSelected}\r\n                                inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </TableCell>\r\n                            \r\n                            <TableCell  style={{ padding: 3, width: 10 }}  align=\"left\">\r\n                                <Typography variant=\"body2\">{(index+1)+(page*10) +\".\"}</Typography>\r\n                            </TableCell>\r\n                            <TableCell  style={{ padding: 3, width: 10 }}  align=\"left\">\r\n                                {scheduled === null ? \r\n                                <Tooltip title={\"No Schedule\"}>\r\n                                        <RadioButtonUncheckedIcon style={{ fontSize: 12}} />    \r\n                                </Tooltip>\r\n                                \r\n                                : \r\n                                <Tooltip title={scheduled === true? \"Schedule Active\" : \"Schedule Expired\"}>\r\n                                    <FiberManualRecordIcon  style={{ fontSize: 12, color: scheduled === true? \"green\": \"red\"}}/>\r\n                                </Tooltip>\r\n                                }\r\n                            </TableCell>\r\n                            <TableCell  style={{ padding: 3, width: 50 }}  align=\"left\">\r\n                            {row.type === \"image/jpeg\" ? \r\n                                <Avatar variant=\"rounded\"  alt={row.name} src={row.url}>\r\n                                </Avatar> :\r\n                                 <Avatar variant=\"rounded\">\r\n                                        <ImageIcon/>\r\n                                 </Avatar>}\r\n                            </TableCell>\r\n                            <TableCell  style={{ padding: 3, overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: 150 }}  align=\"left\">\r\n                                {row.name}\r\n                            </TableCell>\r\n                            <TableCell  style={{ padding: 3, paddingRight: 10, width: 40 }}  align=\"right\">\r\n                                {selecteditem && row.uid === selecteditem.uid ? <CheckIcon color=\"primary\"/>: \"\"}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n\r\n                        </TableBody>\r\n                        <TableFooter>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                labelRowsPerPage={\"Pages\"}\r\n                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                colSpan={6}\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                                />\r\n                            </TableRow>\r\n                        </TableFooter>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n            </Grid>\r\n\r\n            {/*props.data === \"advertisement\" ? null : <Grid item lg={3} xs={12} style={{ paddingLeft: 20, paddingRight: 20, paddingBottom: 20 }} >\r\n                <Grid>\r\n                    <FormControl disabled={rows.length > 0 ?false:true} variant=\"outlined\" style={{ width: \"100%\"}}>\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Parallel</InputLabel>\r\n                        <Select\r\n                        native\r\n                        value={parallel}\r\n                        onChange={handleIntervalChange}\r\n                        label=\"Parallel\"\r\n                        >\r\n                        <option value={1}>1 Campaign 1 Ads</option>\r\n                        <option value={2}>2 Campaign 1 Ads</option>\r\n                        <option value={3}>3 Campaign 1 Ads</option>\r\n                        <option value={4}>4 Campaign 1 Ads</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid style={{ marginTop: 5 }}>\r\n                    <Grid>\r\n                        <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\" }} variant=\"caption\">{rows.length > 0 ? \"Advertisement \" + adsDurations() + \"%\":\"Advertisement\"}</Typography>\r\n                        <LinearProgress variant=\"determinate\"  value={rows.length > 0 ? adsDurations() : 0}/>\r\n                    </Grid>\r\n                    <Grid style={{ marginTop: 10 }} >\r\n                        <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\" }} variant=\"caption\">{rows.length > 0 ? \"Campaign \" + campaignDurations() + \"%\":\"Campaign\"}</Typography>\r\n                        <LinearProgress variant=\"determinate\"  value={rows.length > 0 ? campaignDurations() : 0}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid style={{ marginTop: 17 }}>\r\n                    <FormControl disabled={rows.length > 0 ?false:true} variant=\"outlined\" style={{ width: \"100%\"}}>\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Advertisement</InputLabel>\r\n                        <Select\r\n                        native\r\n                        value={selectedAds}\r\n                        onChange={handleAdvertisementChange}\r\n                        label=\"Advertisement\"\r\n                        >\r\n                        <option value={\"none\"}>none</option>\r\n                        {allAds.map(val => {\r\n                            return <option value={val.id}>{val.name}</option>\r\n                        })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid style={{ marginTop: 10, opacity: rows.length > 0 ? 1:.5}}>\r\n                    <TableContainer>\r\n                        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                            <EnhancedTableHead\r\n                                disableCheckBox={true}\r\n                                classes={classes}\r\n                                numSelected={selected.length}\r\n                                rowCount={rows.length}\r\n                                headCells={[\r\n                                { id: 'no', numeric: false, disablePadding: false, label: 'No.' },\r\n                                { id: 'name', numeric: false, disablePadding: false, label: 'Name' }]}\r\n                            />\r\n                            \r\n                            <TableBody>\r\n                            {(rowsPerPage3 > 0 \r\n                                ? MixRows().slice(page3 * rowsPerPage3, page3 * rowsPerPage3 + rowsPerPage3)\r\n                                : MixRows()\r\n                            ).map((row, index) => {\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n                                \r\n\r\n                                return(\r\n                                <TableRow hover={false}\r\n                                style={{ backgroundColor: row.highlight ? \"#e0e0e0\" : undefined }}\r\n                                key={labelId}\r\n                                role=\"checkbox\"\r\n                                tabIndex={-1} >\r\n\r\n                                <TableCell  style={{ padding: 10, width: 10 }}  align=\"left\">\r\n                                    <Typography variant=\"body2\">{(index+1)+(page3*10) +\".\"}</Typography>\r\n                                </TableCell>\r\n                                <TableCell  style={{  padding: 3, overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: 150 }}  align=\"left\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                            <TableRow>\r\n                                <TablePagination\r\n                                    labelRowsPerPage={\"\"}\r\n                                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                    colSpan={6}\r\n                                    count={MixRows().length}\r\n                                    rowsPerPage={rowsPerPage3}\r\n                                    page={page3}\r\n                                    SelectProps={{\r\n                                        inputProps: { 'aria-label': 'rows per page' },\r\n                                        native: true,\r\n                                    }}\r\n                                    onChangePage={handleChangePage3}\r\n                                    onChangeRowsPerPage={handleChangeRowsPerPage3}\r\n                                    ActionsComponent={TablePaginationActions}\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                                </Grid>*/}             \r\n\r\n            <Grid item lg={4} xs={12} style={{ paddingLeft: 20, paddingRight: 20, paddingBottom: 20 }} >\r\n                \r\n               {selecteditem ?  \r\n                 <Grid>\r\n                    {selecteditem.type === \"image/jpeg\" ? \r\n                    <img style={{ borderRadius: 5  }} width={\"100%\"} alt={selecteditem.name} src={selecteditem.url}/>\r\n                    : <ReactPlayer controls style={{ borderRadius: 5  }} width={\"100%\"} alt={selecteditem.name} url={selecteditem.url}/>}\r\n                </Grid> :\r\n                <Grid style={{ backgroundColor : '#ebebeb', minHeight: 200, borderRadius: 5  }}></Grid>}\r\n            </Grid>\r\n\r\n            <Grid item lg={4} xs={12}>\r\n                <Grid style={{ paddingLeft: 20, paddingRight: 20, paddingBottom: 20 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item md={6} xs={4}>\r\n                            <Button onClick={onClickPreview} color=\"primary\" style={{ width: \"100%\" ,}} \r\n                                startIcon={<VisibilityIcon/>} \r\n                                disabled={rows.length > 0 ? false:true}\r\n                                disableElevation variant=\"outlined\" >\r\n                                    Preview\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={6} xs={4}>\r\n                            <Button onClick={()=>saveCampaign()} color=\"primary\" style={{ width: \"100%\" ,}} \r\n                                startIcon={<SaveIcon/>} \r\n                                disabled={rows.length > 0 ? false:true}\r\n                                disableElevation variant=\"outlined\" >\r\n                                    Save\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={12} xs={4}>\r\n                            <Button onClick={()=>publishCampaign()} color=\"primary\" style={{ width: \"100%\" ,}} \r\n                                startIcon={<PublishIcon/>} \r\n                                disabled={rows.length > 0 ? false:true}\r\n                                disableElevation variant=\"contained\">\r\n                                    Publish\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container style={{ display: \"flex\", paddingLeft: 20, paddingRight: 20, paddingBottom: 20}}>\r\n                    <TextField\r\n                        style={{ width:\"100%\"}}\r\n                        disabled={rows.length > 0 ? false:true}\r\n                        label=\"Name\"\r\n                        onChange={onChangeName}\r\n                        value={campaignName}\r\n                        variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n\r\n                <Grid style={{ display: \"flex\", justifyContent: \"center\", paddingLeft: 20, paddingRight: 20, paddingBottom: 20}}>\r\n                     <Button onClick={()=>setContentSchedule(true)}  color=\"primary\" style={{ width: \"100%\" ,}} \r\n                     disabled={rows.length > 0 ? false:true}\r\n                            startIcon={<QueryBuilderIcon/>} \r\n                            disableElevation  variant=\"outlined\">{\"Global Schedule\"}</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" , paddingLeft: 20, paddingRight: 20, paddingBottom: 10}}>\r\n                <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Global Schedule</Typography>\r\n                <Grid>\r\n                <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Date: </Typography>\r\n                    <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\" }} variant=\"caption\">{\r\n                        globalDateTime ? \r\n                        \"From \" + \r\n                        new Intl.DateTimeFormat('en-GB', {year: 'numeric',day: '2-digit',  month: 'long' }).format(new Date(globalDateTime.startDate))\r\n                        + \" to \" +\r\n                        new Intl.DateTimeFormat('en-GB', {year: 'numeric',day: '2-digit',  month: 'long' }).format(new Date(globalDateTime.endDate))\r\n                        : \"No schedule\"}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid>\r\n                <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\", fontWeight: \"bold\"}} variant=\"caption\">Time: </Typography>\r\n                <Typography style={{ color: rows.length > 0 ? \"#556ee6\":\"#9f9f9f\" }} variant=\"caption\">{\r\n                            globalDateTime ? \r\n                            \"From \" + \r\n                            new Intl.DateTimeFormat('en-GB', {hour: 'numeric',minute: 'numeric' }).format(new Date(globalDateTime.startTime))\r\n                            + \" to \" +\r\n                            new Intl.DateTimeFormat('en-GB', {hour: 'numeric',minute: 'numeric' }).format(new Date(globalDateTime.endTime))\r\n                            : \"No schedule\" }\r\n                </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n                <Grid style={{ opacity: rows.length > 0 ? 1:.5, display:\"flex\", flexDirection:\"column\", justifyContent: \"center\", paddingBottom: 20 }}>              \r\n                    <Grid>\r\n                        <Grid container style={{ paddingLeft: 20, paddingRight: 20, paddingBottom:10 }}>\r\n                            <Grid item xs={12}>\r\n                                <Button onClick={addStation} color=\"primary\" style={{ width: \"100%\" , height: \"100%\"}} \r\n                                startIcon={<AddCircleIcon/>} \r\n                                disableElevation  variant=\"contained\">Select Stations</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid style={{ padding: 20, opacity: rows.length > 0 ? 1:.5}}>\r\n                    <TableContainer>\r\n                        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                            <EnhancedTableHead\r\n                                disableCheckBox={true}\r\n                                classes={classes}\r\n                                numSelected={selected.length}\r\n                                rowCount={rows.length}\r\n                                headCells={[\r\n                                { id: 'no', numeric: false, disablePadding: false, label: 'No.' },\r\n                                { id: 'name', numeric: false, disablePadding: false, label: 'Station ID' },\r\n                                { id: 'folder', numeric: false, disablePadding: false, label: 'Group' }]}\r\n                            />\r\n                            \r\n                            <TableBody>\r\n                            {(rowsPerPage2 > 0\r\n                                ? selectedStations.slice(page2 * rowsPerPage2, page2 * rowsPerPage2 + rowsPerPage2)\r\n                                : selectedStations\r\n                            ).map((row, index) => {\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n                                \r\n                                var currentFolder = allFolder.map(val => val.id).indexOf(row.folder)\r\n                                \r\n                                return(\r\n                                <TableRow hover\r\n                                key={labelId}\r\n                                role=\"checkbox\"\r\n                                tabIndex={-1} >\r\n\r\n                                <TableCell  style={{ padding: 10, width: 10 }}  align=\"left\">\r\n                                    <Typography variant=\"body2\">{(index+1)+(page2*10) +\".\"}</Typography>\r\n                                </TableCell>\r\n                                <TableCell  style={{ padding: 3, overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: 150 }}  align=\"left\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell  style={{ padding: 3, overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: 150 }}  align=\"left\">\r\n                                {currentFolder !== -1 ? \r\n                                  allFolder[currentFolder].name\r\n                                  :\r\n                                  null}\r\n                                </TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                            <TableRow>\r\n                                <TablePagination\r\n                                    labelRowsPerPage={\"\"}\r\n                                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                    colSpan={6}\r\n                                    count={selectedStations.length}\r\n                                    rowsPerPage={rowsPerPage2}\r\n                                    page={page2}\r\n                                    SelectProps={{\r\n                                        inputProps: { 'aria-label': 'rows per page' },\r\n                                        native: true,\r\n                                    }}\r\n                                    onChangePage={handleChangePage2}\r\n                                    onChangeRowsPerPage={handleChangeRowsPerPage2}\r\n                                    ActionsComponent={TablePaginationActions}\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactPlayer from 'react-player'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Contents from '../../views/pages/Content/Contents'\r\nimport Stations from '../../views/pages/Station/Stations'\r\nimport Campaigns from '../../views/pages/Campaign/Campaigns'\r\nimport ListStations from '../../views/pages/Campaign/Stations'\r\nimport AddEditCampaign from './AddEditCampaign'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n\r\nconst bytesToSize = (bytes) => {\r\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  if (bytes === 0) return '0 Byte';\r\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: \"#556ee6\",\r\n    display:\"flex\",\r\n    width:\"100%\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  closeButton: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, data, ...other } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography style={{ color: \"white\", textAlign: \"center\", marginTop: 5}} variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon  style={{ color: \"white\"}}/>\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n      <Divider style={{ opacity: .2 }}/>\r\n    </React.Fragment>\r\n  );\r\n});\r\n\r\nexport default function AlertDialog(props) {\r\n  \r\n  const renderPage = () => {\r\n    if(props.option === \"openFolder\"){\r\n      \r\n      if(props.data === \"content_folder\"){\r\n        return <Contents folder={props.selectedItem ? props.selectedItem.id : null}/>\r\n      }\r\n      else if(props.data === \"station_zone\"){\r\n        return <Stations folder={props.selectedItem ? props.selectedItem.id : null}/>\r\n      }\r\n      else if(props.data === \"campaign_folder\"){\r\n        return <Campaigns folder={props.selectedItem ? props.selectedItem.id : null}/>\r\n      }\r\n      else if(props.data === \"advertisement_folder\"){\r\n        return <Campaigns ads={true} folder={props.selectedItem ? props.selectedItem.id : null}/>\r\n      }\r\n      else if(props.data === \"campaign\" || props.data === \"advertisement\"){\r\n\r\n        var currentCampaign = props.allCampaign.filter(val=> {\r\n          if(val.advertisement && val.advertisement === props.selectedItem.id){\r\n            return val\r\n          }\r\n          else\r\n          {\r\n            return undefined\r\n          }\r\n        })\r\n\r\n        return <ListStations selectedItem={props.selectedItem} allCampaign={currentCampaign} selectedStations={props.selectedItem.station ? props.selectedItem.station : []} listOnly={true} ads={props.data === \"advertisement\" ? true : false}/>\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <Dialog\r\n        fullScreen={props.fullScreenDialog}\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n\r\n        <DialogTitle style={{ minWidth: 200 }} id=\"customized-dialog-title\" onClose={props.handleClose} data={props.data}>\r\n          {props.title}\r\n        </DialogTitle>\r\n\r\n        {props.description !== \"\" ?\r\n          <Typography style={{ padding: 18 }} id=\"alert-dialog-description\">\r\n            {props.description}\r\n          </Typography>\r\n        :null}\r\n        {props.option=== \"info\" ? \r\n        <Table>\r\n            <TableBody>\r\n              {props.displayInfo.map((cell, index)=>{\r\n                const labelCellId = `enhanced-table-cell-${index}`;\r\n                \r\n                if(cell.id === \"created\" || cell.id === \"refreshed\" || cell.id === \"signed_in\" || cell.id === \"signed_out\"){\r\n                  return(\r\n                    <TableRow key={labelCellId} >\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      {props.selectedItem[cell.id] ? <TableCell component=\"th\" scope=\"row\">\r\n                      {new Intl.DateTimeFormat('en-GB', {year: 'numeric',day: '2-digit',  month: 'long' ,hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true }).format(props.selectedItem[cell.id])}\r\n                      </TableCell> : <TableCell component=\"th\" scope=\"row\"></TableCell>}\r\n                    </TableRow>)\r\n                }\r\n                else if(cell.id === \"size\" || cell.id === \"campaign_size\" ){\r\n                  return(\r\n                    <TableRow key={labelCellId} >\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                      {bytesToSize(props.selectedItem[cell.id])}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    )\r\n                }\r\n                else if(cell.id === \"in_use\"){\r\n\r\n                  var newRows = [];\r\n                    newRows = props.allCampaign.filter(item => {\r\n                      if(item.content){\r\n                        if(item.content.map(val => val.id).indexOf(props.selectedItem.id) !== -1){\r\n                          return item\r\n                        }\r\n                        else\r\n                        {\r\n                          return undefined\r\n                        }\r\n                      }else\r\n                      {\r\n                        return undefined\r\n                      }\r\n                    })\r\n\r\n                  return(\r\n                    <TableRow key={labelCellId} >\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                        {newRows.length > 0  ? \r\n                        <Tooltip title={<Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                            {newRows.map(val => {\r\n                              return <Typography key={val.id} variant=\"caption\">{val.name}</Typography>\r\n                          })}</Grid>}>\r\n                          <IconButton>\r\n                            <CheckCircleIcon color=\"primary\" fontSize=\"small\"/> \r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        : \r\n                        <IconButton>\r\n                          <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                        </IconButton>\r\n                        }\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    )\r\n                }\r\n                else if(cell.id === \"campaign\"){\r\n                  \r\n                  \r\n                  return(\r\n                    <TableRow key={labelCellId} >\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                        {props.selectedItem[cell.id] ? \r\n                        <Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                            <Typography key={index} variant=\"body2\">{props.allCampaign.map(val=> val.id).indexOf(props.selectedItem[cell.id]) !== -1 ? props.allCampaign[props.allCampaign.map(val=> val.id).indexOf(props.selectedItem[cell.id])].name : ''}</Typography>\r\n                          </Grid>: null}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    )\r\n                }\r\n                else if(cell.id === \"advertisement\"){\r\n                  \r\n                  \r\n                  return(\r\n                    <TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {cell.label}\r\n                    </TableCell>\r\n                    <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                      {props.selectedItem[cell.id] ? \r\n                      <Grid style={{ display:'flex', flexDirection:\"column\"}}>\r\n                          <Typography key={index} variant=\"body2\">{props.allAds.map(val=> val.id).indexOf(props.selectedItem[cell.id]) !== -1 ? props.allAds[props.allAds.map(val=> val.id).indexOf(props.selectedItem[cell.id])].name : ''}</Typography>\r\n                        </Grid>: null}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  )\r\n                }\r\n                else if(cell.id === \"publish\"){\r\n                  return (<TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                                  {props.selectedItem[cell.id] ? \r\n                                  <IconButton>\r\n                                    <CheckCircleIcon color=\"primary\" fontSize=\"small\"/>\r\n                                  </IconButton>:\r\n                                  <IconButton>\r\n                                    <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                                  </IconButton>}\r\n                                </TableCell>\r\n                  </TableRow>)\r\n              \r\n                }\r\n                else if(cell.id === \"campaign_status\"){\r\n                  return (<TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                                  {props.selectedItem[cell.id] != null ? \r\n                        <IconButton>\r\n                          <FiberManualRecordIcon style={{ color: props.selectedItem[cell.id] ? \"#6bce00\" : \"#b4b4b4\"}} fontSize=\"small\"/>\r\n                        </IconButton>:\r\n                        <IconButton>\r\n                          <RadioButtonUncheckedIcon style={{ color: \"#b4b4b4\"}} fontSize=\"small\"/>\r\n                        </IconButton>}\r\n                      </TableCell>\r\n                  </TableRow>)\r\n                }\r\n                else if(cell.id === \"status\"){\r\n                                \r\n                  return(<TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                        {props.selectedItem[cell.id]? \r\n                        <Tooltip title=\"Online\">\r\n                        <IconButton>\r\n                          <CheckCircleIcon color=\"primary\" fontSize=\"small\"/>\r\n                        </IconButton>\r\n                        </Tooltip>:\r\n                        <Tooltip title=\"Offline\">\r\n                        <IconButton>\r\n                          <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                        </IconButton>\r\n                        </Tooltip>}\r\n                      </TableCell>\r\n                  </TableRow>)\r\n                }\r\n                else if(cell.id === \"is_playing\"){\r\n                                \r\n                  return(<TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                        {props.selectedItem[cell.id]? \r\n                        <Tooltip title=\"Playing\">\r\n                        <IconButton>\r\n                          <CheckCircleIcon color=\"primary\" fontSize=\"small\"/>\r\n                        </IconButton>\r\n                        </Tooltip>:\r\n                        <Tooltip title=\"Stop\">\r\n                        <IconButton>\r\n                          <CancelIcon color=\"error\" fontSize=\"small\"/>\r\n                        </IconButton>\r\n                        </Tooltip>}\r\n                      </TableCell>\r\n                  </TableRow>)\r\n                }\r\n                else if(cell.id === \"campaign_duration\"){\r\n                  \r\n                  return (<TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                      {props.selectedItem.content ? \r\n                                  props.secondsToHms(props.selectedItem[cell.id])\r\n                                  :\r\n                                  null}\r\n                      </TableCell>\r\n                  </TableRow>)\r\n                }\r\n                else if(cell.id === \"folder\"){\r\n                  \r\n                  var currentFolder = props.allFolder.map(val => val.id).indexOf(props.selectedItem.folder)\r\n\r\n                  return (<TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {cell.label}\r\n                      </TableCell>\r\n                      <TableCell key={labelCellId}  component=\"th\" scope=\"row\">\r\n                      {currentFolder !== -1 ? \r\n                                  props.allFolder[currentFolder].name\r\n                                  :\r\n                                  null}\r\n                      </TableCell>\r\n                  </TableRow>)\r\n                }\r\n\r\n\r\n                return(\r\n                  <TableRow key={labelCellId} >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {cell.label}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Grid style={{overflow: \"hidden\", textOverflow: \"ellipsis\", maxWidth: 200}} >\r\n                        <Typography variant=\"body2\" noWrap={true}>{props.selectedItem[cell.id]}</Typography>\r\n                      </Grid>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  \r\n                )\r\n              })}\r\n            </TableBody>\r\n        </Table> : null}\r\n\r\n        {props.option === \"preview\" ? \r\n            props.selectedItem.type === \"video/mp4\" ? <Grid style={{ backgroundColor: \"black\", padding: 10, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <ReactPlayer controls url={props.selectedItem.url}/>\r\n            </Grid>:\r\n            <Grid key={props.selectedItem.id}  style={{ height: \"100%\", width: props.matches ? 450 : 300, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                <img style={{ width: \"100%\", height: \"100%\", objectFit: 'contain'}} alt={props.selectedItem.name} src={props.selectedItem.url}/>\r\n            </Grid>\r\n              :null}\r\n\r\n        {props.data !== \"campaign\" && props.option === \"edit\" ? \r\n        props.data === \"advertisement\" ? null : \r\n        <Grid container style={{  paddingTop: 10, paddingBottom: 10, display: \"flex\", flexDirection: \"row\" }}>\r\n            {props.editCells.map((cell, index)=>{ \r\n\r\n              var sizeMd = 6;\r\n\r\n              if(index === props.editCells.length - 1){\r\n                if((index+1) % 2 !== 0){\r\n                  sizeMd = 12;\r\n                } \r\n              }\r\n\r\n              return(\r\n                <Grid xs={12} md={sizeMd} style={{  padding: 10, display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}} items >\r\n                  <TextField\r\n                    key={\"textfield-input-\"+index}\r\n                    label={cell.label}\r\n                    style={{ width: \"100%\"}}\r\n                    value={props.selectedItem[cell.id]}\r\n                    onChange={(e)=>props.onChangeHandle(e, cell.id)}\r\n                    variant=\"outlined\"/></Grid>\r\n                  )}) }\r\n            </Grid>\r\n        : null}\r\n\r\n        {props.data !== \"campaign\" && props.option === \"addItem\"? \r\n            props.data === \"advertisement\" ? null : \r\n          <Grid container style={{  paddingTop: 10, paddingBottom: 10, display: \"flex\", flexDirection: \"row\" }}>\r\n            {props.addCells ? props.addCells.map((cell, index)=>{ \r\n\r\n              var sizeMd = 6;\r\n\r\n              if(index === props.addCells.length - 1){\r\n                if((index+1) % 2 !== 0){\r\n                  sizeMd = 12;\r\n                } \r\n              }\r\n              \r\n\r\n              return(   \r\n                <Grid xs={12} md={sizeMd} style={{  padding: 10, display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}} items >\r\n              <TextField\r\n                key={\"textfield-input-\"+index}\r\n                label={cell.label}\r\n                style={{ width: \"100%\"}}\r\n                value={props.addItem[cell.id]}\r\n                onChange={(e)=>props.onChangeAddItemHandle(e, cell.id)}\r\n                variant=\"outlined\"/></Grid>\r\n              )}):null }\r\n        </Grid>\r\n        : null}\r\n\r\n        {props.dialogLoading ? \r\n        <Grid style={{ padding: 20, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n            <CircularProgress \r\n              disableShrink\r\n              color=\"primary\" />\r\n        </Grid> : null}\r\n\r\n        {!props.dialogLoading && props.option === \"move\"? props.folderData ? \r\n        <Grid>\r\n        <ListItem button style={{ borderBottom: '1px solid rgba(0, 0, 0, 0.1)', borderTop: '1px solid rgba(0, 0, 0, 0.1)', width: \"100%\" }} key={\"ListItem-null\"} onClick={()=>props.selectFolder(null)} >\r\n          <Typography color=\"primary\" style={{ fontWeight: 'bold' }}>Default</Typography>\r\n        </ListItem>\r\n        {props.folderData.sort((a, b) => (a.name < b.name ? -1 : 1)).map((cell, index)=>{\r\n          return(\r\n            <ListItem button style={{ borderBottom: '1px solid rgba(0, 0, 0, 0.1)',  width: \"100%\"}} key={\"ListItem-\"+index} onClick={()=>props.selectFolder(cell)} >\r\n              <ListItemText primary={cell.name} />\r\n            </ListItem>\r\n          )\r\n        })}\r\n        </Grid>\r\n        :null : null }\r\n\r\n        {!props.dialogLoading && props.option === \"moveAll\"? props.folderData ? \r\n        <Grid>\r\n        <ListItem button style={{ borderBottom: '1px solid rgba(0, 0, 0, 0.1)', borderTop: '1px solid rgba(0, 0, 0, 0.1)', width: \"100%\"}} key={\"ListItem-null\"} onClick={()=>props.selectFolderMoveAll(null)} >\r\n          <Typography color=\"primary\" style={{ fontWeight: 'bold' }}>Default</Typography>\r\n        </ListItem>\r\n        {props.folderData.sort((a, b) => (a.name < b.name ? -1 : 1)).map((cell, index)=>{\r\n          return(\r\n            <ListItem button style={{ borderBottom: '1px solid rgba(0, 0, 0, 0.1)', width: \"100%\"}} key={\"ListItem-\"+index} onClick={()=>props.selectFolderMoveAll(cell)} >\r\n              <ListItemText primary={cell.name} />\r\n            </ListItem>\r\n          )\r\n        })}\r\n        </Grid>\r\n        :null : null }\r\n        \r\n        {renderPage()}\r\n\r\n        {(props.data === \"campaign\" || props.data === \"advertisement\") && props.option === \"addItem\" ? <AddEditCampaign {...props} folder={props.folder} handleClose={props.handleClose}/> : null }\r\n\r\n        {(props.data === \"campaign\"  || props.data === \"advertisement\") && props.option === \"edit\" ? <AddEditCampaign {...props}  option={props.option} selectedItem={props.selectedItem} handleClose={props.handleClose}/> : null }\r\n        \r\n        {props.component ? props.component : null}\r\n\r\n        {(props.data === \"campaign\" || props.data === \"advertisement\") && props.option === \"addItem\" ? null : props.agreeButton ? <DialogActions>\r\n          <Button variant=\"outlined\" style={{ fontSize: 14, fontWeight: 'bold'}} onClick={props.handleClose} color=\"primary\">\r\n          {props.disagreeTxt}\r\n          </Button>\r\n          <Button disableElevation variant=\"contained\" style={{ fontSize: 14, fontWeight: 'bold'}} onClick={props.handleAgree} color=\"primary\" autoFocus>\r\n          {props.agreeTxt}\r\n          </Button>\r\n          \r\n        </DialogActions> : null} \r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Table from '../../../modules/components/Table'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport firebase from \"firebase\";\r\n\r\nexport default function Index(props) {\r\n\r\n    const [headCells, setHeadCells] = React.useState([]);\r\n    const [headMobileCells, setHeadMobileCells] = React.useState([]);\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n    const [searchCell, setSearchCell] = React.useState([]);\r\n    const [displayInfo, setDisplayInfo] = React.useState([]);\r\n    const [excelList, setExcelList] = React.useState([]);\r\n    const [editCells, setEditCells] = React.useState([]);\r\n    const [addCells, setAddCells] = React.useState([]);\r\n    const [addCellsName, setAddCellsName] = React.useState([]);\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n\r\n    useEffect(() => {\r\n\r\n        setHeadCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Station ID' },\r\n            { id: 'block', numeric: false, disablePadding: false, label: 'Block' },\r\n            { id: 'address', numeric: false, disablePadding: false, label: 'Address' },\r\n            { id: 'campaign', numeric: true, disablePadding: false, label: 'Campaign' },\r\n            { id: 'advertisement', numeric: true, disablePadding: false, label: 'Advertisement' },\r\n            { id: 'status', numeric: true, disablePadding: false, label: 'Status' },\r\n            { id: 'is_playing', numeric: true, disablePadding: false, label: 'Play' },\r\n            { id: 'folder', numeric: true, disablePadding: false, label: 'Group' },\r\n            { id: 'refreshed', numeric: true, disablePadding: false, label: 'Refreshed' },\r\n        ])\r\n\r\n        setHeadMobileCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Station ID' },\r\n        ])\r\n    \r\n        setSearchCell([\r\n            { id: 'id', label: 'Station Code' },\r\n            { id: 'name', label: 'Station ID' },\r\n            { id: 'status', label: 'Status' },\r\n        ])\r\n\r\n        setDisplayInfo([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Station Code' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Station ID' },\r\n            { id: 'status', numeric: true, disablePadding: false, label: 'Status' },\r\n            { id: 'is_playing', numeric: true, disablePadding: false, label: 'Play' },\r\n            { id: 'zone', numeric: true, disablePadding: false, label: 'Zone' },\r\n            { id: 'subzone', numeric: true, disablePadding: false, label: 'Sub-Zone' },\r\n            { id: 'folder', numeric: true, disablePadding: false, label: 'Group' },\r\n            { id: 'block', numeric: false, disablePadding: false, label: 'Block' },\r\n            { id: 'lobby', numeric: false, disablePadding: false, label: 'Lobby' },\r\n            { id: 'address', numeric: false, disablePadding: false, label: 'Address' },\r\n            { id: 'postcode', numeric: false, disablePadding: false, label: 'Postcode' },\r\n            { id: 'installed_date', numeric: false, disablePadding: false, label: 'Installed Date' },\r\n            { id: 'campaign', numeric: true, disablePadding: false, label: 'Campaign' },\r\n            { id: 'advertisement', numeric: true, disablePadding: false, label: 'Advertisement' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'refreshed', numeric: true, disablePadding: false, label: 'Refreshed' },\r\n            { id: 'sim_number', numeric: true, disablePadding: false, label: 'SIM Serial Number' },\r\n            { id: 'screen_size', numeric: true, disablePadding: false, label: 'Screen Size' },\r\n            { id: 'note', numeric: false, disablePadding: false, label: 'Note' },\r\n           \r\n        ])\r\n\r\n        setExcelList([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Station Code' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Station ID' },\r\n            { id: 'status', numeric: true, disablePadding: false, label: 'Status' },\r\n            { id: 'zone', numeric: true, disablePadding: false, label: 'Zone' },\r\n            { id: 'subzone', numeric: true, disablePadding: false, label: 'Sub-Zone' },\r\n            { id: 'folder', numeric: true, disablePadding: false, label: 'Group' },\r\n            { id: 'block', numeric: false, disablePadding: false, label: 'Block' },\r\n            { id: 'lobby', numeric: false, disablePadding: false, label: 'Lobby' },\r\n            { id: 'address', numeric: false, disablePadding: false, label: 'Address' },\r\n            { id: 'postcode', numeric: false, disablePadding: false, label: 'Postcode' },\r\n            { id: 'installed_date', numeric: false, disablePadding: false, label: 'Installed Date' },\r\n            { id: 'campaign', numeric: true, disablePadding: false, label: 'Campaign' },\r\n            { id: 'advertisement', numeric: true, disablePadding: false, label: 'Advertisement' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'refreshed', numeric: true, disablePadding: false, label: 'Refreshed' },\r\n            { id: 'sim_number', numeric: true, disablePadding: false, label: 'SIM Serial Number' },\r\n            { id: 'screen_size', numeric: true, disablePadding: false, label: 'Screen Size' },\r\n            { id: 'note', numeric: false, disablePadding: false, label: 'Note' },\r\n           \r\n        ])\r\n\r\n        setEditCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Station ID' },\r\n            { id: 'zone', numeric: true, disablePadding: false, label: 'Zone' },\r\n            { id: 'subzone', numeric: true, disablePadding: false, label: 'Sub-Zone' },\r\n            { id: 'block', numeric: false, disablePadding: false, label: 'Block' },\r\n            { id: 'lobby', numeric: false, disablePadding: false, label: 'Lobby' },\r\n            { id: 'address', numeric: false, disablePadding: false, label: 'Address' },\r\n            { id: 'postcode', numeric: false, disablePadding: false, label: 'Postcode' },\r\n            { id: 'installed_date', numeric: false, disablePadding: false, label: 'Installed Date' },\r\n            { id: 'sim_number', numeric: true, disablePadding: false, label: 'SIM Serial Number' },\r\n            { id: 'screen_size', numeric: true, disablePadding: false, label: 'Screen Size' },\r\n            { id: 'note', numeric: false, disablePadding: false, label: 'Note' },\r\n        ])\r\n\r\n        setAddCells([\r\n            { id: 'name', label: 'Station ID' },\r\n            { id: 'zone', label: 'Zone' },\r\n            { id: 'subzone', label: 'Sub-Zone' },\r\n            { id: 'block', label: 'Block' },\r\n            { id: 'lobby', label: 'Lobby' },\r\n            { id: 'address', label: 'Address' },\r\n            { id: 'postcode', label: 'Postcode' },\r\n            { id: 'installed_date', label: 'Installed Date' },\r\n            { id: 'sim_number', label: 'SIM Serial Number' },\r\n            { id: 'screen_size', label: 'Screen Size' },\r\n            { id: 'note', label: 'Note' },\r\n        ])\r\n\r\n        setAddCellsName({ name: '', \r\n        refreshed: firebase.database.ServerValue.TIMESTAMP, \r\n        push: false,\r\n        status: false,\r\n        is_playing: false,\r\n        zone:'',\r\n        subzone:'',\r\n        block: '', \r\n        lobby: '',\r\n        address: '', \r\n        postcode: '',\r\n        installed_date: '',\r\n        sim_number: '',\r\n        screen_size:'',\r\n        note: '',\r\n        brightness: '0F',\r\n        message: 'push',\r\n        volume: '0',\r\n        app_download_path: '',\r\n         })\r\n    \r\n        setSearchValue(\"name\")\r\n        \r\n    }, []);\r\n\r\n    return (\r\n    <Grid>\r\n        <Table \r\n            disabledEdit={false}\r\n            disabledDelete={false}\r\n            control={true}\r\n            rowsPerPage={5}\r\n            orderBy=\"created\" \r\n            data=\"station\" \r\n            addItemButton={true}\r\n            addItemText=\"Add station\"\r\n            addItemIcon={<AddCircleIcon/>}\r\n            addCells={addCells}\r\n            addCellsName={addCellsName}\r\n            excelList={excelList}\r\n            folder_data=\"station_zone\"\r\n            folder={props.folder}\r\n            displayInfo={displayInfo}\r\n            matches={matches}\r\n            editCells={editCells}\r\n            downloadExcel={true}\r\n            headCells={matches ? headCells : headMobileCells} \r\n            searchValue={searchValue} \r\n            searchCell={searchCell}/>\r\n    </Grid>\r\n    )\r\n\r\n}\r\n  ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\n  \r\nexport default function TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };","import React, { useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function ContentPreview(props){\r\n\r\n    const [count, setCount] = React.useState(0);\r\n    const videoRef = React.useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.rows.length > 1){\r\n            if(props.withinDateTime(props.rows[count].start_date, \r\n                props.rows[count].end_date, \r\n                props.rows[count].start_time, props.rows[count].end_time))\r\n                {\r\n                    if(props.rows[count].type === \"image/jpeg\"){\r\n                        const timer = setTimeout(() => {\r\n                        \r\n                            if(count === props.rows.length - 1){\r\n                                let newCount = 0;\r\n                            \r\n                                setCount(newCount)\r\n                            }\r\n                            else\r\n                            {\r\n                                let newCount = count + 1;\r\n                            \r\n                                setCount(newCount)\r\n                            }\r\n                            \r\n                        }, props.rows[count].duration*1000);\r\n                        return () => clearTimeout(timer);\r\n                    }\r\n                    else\r\n                    {\r\n                        videoRef.current.play()\r\n                    }\r\n                }\r\n                else{\r\n                    if(count === props.rows.length - 1){\r\n                        let newCount = 0;\r\n                    \r\n                        setCount(newCount)\r\n                    }\r\n                    else\r\n                    {\r\n                        let newCount = count + 1;\r\n                    \r\n                        setCount(newCount)\r\n                    }\r\n                }\r\n            \r\n        }\r\n        else\r\n        {\r\n            if(props.rows[count].type === \"video/mp4\"){\r\n                videoRef.current.play()\r\n            }\r\n        }\r\n\r\n    }, [count, props]);\r\n\r\n    const videoEnd = (e) => {\r\n        \r\n        if(count === props.rows.length - 1){\r\n            let newCount = 0;\r\n        \r\n            setCount(newCount)\r\n\r\n            if(props.rows.length === 1){\r\n                if(props.rows[count].type === \"video/mp4\"){\r\n                    videoRef.current.play()\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let newCount = count + 1;\r\n        \r\n            setCount(newCount)\r\n        }\r\n    }\r\n\r\n    \r\n    return(\r\n        <Grid style={{ width: 1080/4, height: 1920/4, display: \"Flex\", alignItems: \"center\"}}>\r\n            {props.rows.map((val, index)=>{\r\n                if(val.type === \"image/jpeg\"){\r\n                    return (<img key={\"img\"+ index} style={{ display: count===index? \"flex\": \"none\" ,  position:\"absolute\"  }} width={\"100%\"} alt={val.name} src={val.url}/>)\r\n                }\r\n                else\r\n                {\r\n                    return (<video ref={count===index?videoRef: null} key={\"video\"+ index}  onEnded={videoEnd} style={{  display: count===index? \"flex\": \"none\" ,  position:\"absolute\"  }} width={\"100%\"} alt={val.name} src={val.url}/>)\r\n                }\r\n            })}\r\n        </Grid>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MuiPhoneInput from 'material-ui-phone-number';\r\n//import EmailValidator from 'email-validator';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:\"center\",\r\n    width:\"100%\"\r\n  }\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n  const [name, setName] =  React.useState(\"\");\r\n  const [lastname, setLastname] =  React.useState(\"\");\r\n  const [phone, setPhone] =  React.useState(\"\");\r\n  const [email, setEmail] =  React.useState(\"\");\r\n        \r\n  const [isname, setIsname] =  React.useState(true);\r\n  const [islastname, setIslastname] =  React.useState(true);\r\n  const [isphone, setIsphone] =  React.useState(true);\r\n  const [isemail, setIsemail] =  React.useState(true);\r\n\r\n\r\n  /*const hancleClick = (event) => {\r\n\r\n    const result = EmailValidator.validate(email);\r\n    var phone_result = false;\r\n    var name_result = false;\r\n    var last_name_result = false;\r\n    var gender_result = false;\r\n\r\n    if(phone.length > 7)\r\n    {\r\n      phone_result = true;\r\n      setIsphone(true)\r\n    }\r\n    else\r\n    {\r\n      setIsphone(false)\r\n    }\r\n\r\n    if(name.length > 2)\r\n    {\r\n      name_result = true;\r\n      setIsname(true)\r\n    }\r\n    else\r\n    {\r\n      setIsname(false)\r\n    }\r\n\r\n    if(lastname.length > 2)\r\n    {\r\n      last_name_result = true;\r\n      setIslastname(true)\r\n    }\r\n    else\r\n    {\r\n      setIslastname(false)\r\n    }\r\n\r\n\r\n    if(result === false){\r\n      setIsemail(false)\r\n    }\r\n    else{\r\n      setIsemail(true)\r\n    }\r\n\r\n    if(result === true && phone_result === true && name_result === true && gender_result === true && last_name_result === true){\r\n      \r\n    }\r\n\r\n  }*/\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handleLastNameChange = (event) => {\r\n    setLastname(event.target.value)\r\n  }\r\n\r\n  const handlePhoneChange = (value) => {\r\n    setPhone(value)\r\n  }\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value)\r\n  }\r\n  \r\n  \r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid style={{ padding: 20 }}>\r\n            <Grid style={{ maxWidth: 500, width: \"100%\", marginTop: 15 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid md={6} item xs={12}>\r\n                  <TextField\r\n                      error={isname ?false: true}\r\n                      autoFocus\r\n                      id=\"name\"\r\n                      value={name}\r\n                      onChange={handleNameChange}\r\n                      label=\"First Name\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      helperText={islastname ? \"\":\"Incorrect First Name.\"}\r\n                    />\r\n                </Grid>\r\n                <Grid md={6} item xs={12}>\r\n                  <TextField\r\n                      error={islastname ?false: true}\r\n                      id=\"last_name\"\r\n                      variant=\"outlined\"\r\n                      value={lastname}\r\n                      onChange={handleLastNameChange}\r\n                      label=\"Last Name\"\r\n                      fullWidth\r\n                      helperText={islastname ? \"\":\"Incorrect Last Name.\"}\r\n                    />\r\n                </Grid>\r\n              </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                      <MuiPhoneInput\r\n                      autoFormat={false}\r\n                      error={isphone ?false: true}\r\n                        style={{ width: '100%', marginTop: 15 }}\r\n                        defaultCountry='sg'\r\n                        regions={'asia'}\r\n                        value={phone}\r\n                        onChange={handlePhoneChange}\r\n                      />\r\n                    </Grid>\r\n                  <Grid container style={{ marginTop: 15 }} spacing={2}>\r\n                    <Grid item  xs={12}>\r\n                      <TextField\r\n                        error={isemail ?false: true}\r\n                        \r\n                        id=\"email\"\r\n                        variant=\"outlined\"\r\n                        value={email}\r\n                        onChange={handleEmailChange}\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        helperText={isemail ? \"\":\"Incorrect email.\"}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container style={{ marginTop: 15 }} spacing={2}>\r\n                    <Grid item  xs={12}>\r\n                      <TextField\r\n                        id=\"comments\"\r\n                        variant=\"outlined\"\r\n                        label=\"Comments\"\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n            </Grid>\r\n            </Grid>\r\n        </div>\r\n      );\r\n  \r\n\r\n  \r\n}","import React, {useMemo, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useDropzone} from 'react-dropzone'\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport firebase from \"firebase\";\r\n\r\n//styles\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 1,\r\n    borderRadius: 2,\r\n    borderColor: '#d8d8d8',\r\n    borderStyle: 'dashed',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out',\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\n\r\nconst thumbsContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n};\r\n  \r\nconst thumb = {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #d8d8d8',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 70,\r\n    height: 70,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n};\r\n\r\n \r\nconst img = {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n};\r\n\r\nvar upload_count = 0;\r\nvar stopUpload = false;\r\nvar uploading = false;\r\n\r\nexport default function Index(props) {\r\n\r\n    const [files, setFiles] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [uploadTxt, setUploadTxt] = React.useState(\"Upload one or more files now\");\r\n    const [uploadComplete, setUploadComplete] = React.useState(true);\r\n    const [mediaRef] = React.useState(firebase.storage().ref(props.data))\r\n    const [mediaDatabaseRef] = React.useState(firebase.database().ref().child(props.data))\r\n\r\n    const {\r\n        acceptedFiles,\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/jpeg, video/mp4',\r\n        onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Make sure to revoke the data uris to avoid memory leaks\r\n        return () => {\r\n            stopUpload = true;\r\n        };\r\n    }, []);\r\n\r\n    const thumbs = files.map((file, index) => {\r\n\r\n        if(file.type === \"video/mp4\"){\r\n            \r\n            return(\r\n                <Grid key={file.name+index} style={{ display:\"flex\", flexDirection: \"column\"}}>\r\n                    <Grid style={{overflow: \"hidden\", textOverflow: \"ellipsis\", width: 70, marginBottom: 10}}>\r\n                        <Typography variant=\"caption\" noWrap={true}>{file.name}</Typography>\r\n                    </Grid>\r\n                    \r\n                    <Grid style={thumb} key={file.name}>\r\n                        <Grid style={{ display: \"flex\", justifyContent:'center', alignItems: 'center', width: \"100%\"}}>\r\n                            <VideoLibraryIcon color=\"primary\" style={{ fontSize: 36}}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n               \r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Grid key={file.name+index} style={{ display:\"flex\", flexDirection: \"column\"}}>\r\n                    <Grid style={{overflow: \"hidden\", textOverflow: \"ellipsis\", width: 70, marginBottom: 10}}>\r\n                        <Typography variant=\"caption\" noWrap={true}>{file.name}</Typography>\r\n                    </Grid>\r\n                    \r\n                    <Grid style={thumb} key={file.name}>\r\n                        <Grid style={{ display: \"flex\", justifyContent:'center', alignItems: 'center', width: \"100%\", overflow: 'hidden'}}>\r\n                            <img\r\n                            src={file.preview}\r\n                            style={img}\r\n                            alt={file.name}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n    });\r\n    \r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept,\r\n    ]);\r\n\r\n    const handleUploadSuccess = (metadata, filename) => {\r\n\r\n        mediaRef\r\n        .child(metadata.name)\r\n        .getDownloadURL().then((url) => {\r\n\r\n            if(metadata.contentType === \"video/mp4\"){\r\n                var media = new Audio(url);\r\n\r\n                media.onloadedmetadata = function(){\r\n\r\n                    if(media.duration){\r\n\r\n                        var newPostKey = mediaDatabaseRef.push().key;\r\n\r\n                        var postData = {\r\n                            id: newPostKey,\r\n                            name: filename,\r\n                            file_name: metadata.name,\r\n                            url: url,\r\n                            size: metadata.size,\r\n                            created: firebase.database.ServerValue.TIMESTAMP,\r\n                            type: metadata.contentType,\r\n                            full_path: metadata.fullPath,\r\n                            user: firebase.auth().currentUser.uid,\r\n                            duration: media.duration,\r\n                            folder: props.folder ? props.folder : null\r\n                        };\r\n            \r\n                        if(props.folder){\r\n                            firebase.database().ref(\"content_folder/\" + props.folder).update({ updated: firebase.database.ServerValue.TIMESTAMP})\r\n                        }\r\n                        \r\n                    \r\n                        var updates = {};\r\n                        updates[newPostKey] = postData;\r\n                    \r\n                        mediaDatabaseRef.update(updates).then(()=>{\r\n                            firebase.database().ref(\"log_content\").push({  user: firebase.auth().currentUser.email, item: postData, status: \"uploaded\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n                            completedUpload();\r\n                        })\r\n                    }\r\n                };    \r\n            \r\n            }\r\n            else\r\n            {\r\n\r\n                var newPostKey = mediaDatabaseRef.push().key;\r\n\r\n                var postData = {\r\n                    id: newPostKey,\r\n                    name:filename,\r\n                    file_name: metadata.name,\r\n                    url: url,\r\n                    size: metadata.size,\r\n                    created: firebase.database.ServerValue.TIMESTAMP,\r\n                    type: metadata.contentType,\r\n                    full_path: metadata.fullPath,\r\n                    user: firebase.auth().currentUser.uid,\r\n                    folder: props.folder ? props.folder : null\r\n                };\r\n\r\n                if(props.folder){\r\n                    firebase.database().ref(\"content_folder/\" + props.folder).update({ updated: firebase.database.ServerValue.TIMESTAMP})\r\n                }\r\n    \r\n                var updates = {};\r\n                updates[newPostKey] = postData;\r\n            \r\n                mediaDatabaseRef.update(updates).then(()=>{\r\n                    firebase.database().ref(\"log_content\").push({  user: firebase.auth().currentUser.email, item: postData, status: \"uploaded\", updated: firebase.database.ServerValue.TIMESTAMP})\r\n                    completedUpload();\r\n                })\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const completedUpload = () =>{\r\n        \r\n        if(stopUpload === false){\r\n            upload_count++;\r\n            uploadFiles();\r\n        }\r\n        else\r\n        {\r\n            uploading = false;\r\n        }\r\n    };\r\n\r\n    const startUploadManually = () => {\r\n        \r\n        if(!uploading){\r\n            stopUpload = false;\r\n            upload_count = 0;\r\n            setLoading(true)\r\n            uploadFiles();\r\n        }\r\n        else\r\n        {\r\n            alert(\"Files uploading, please wait for a while...\")\r\n        }\r\n    }\r\n\r\n    const uploadFiles = () => {\r\n        if(Array.from(acceptedFiles).length === upload_count){\r\n            uploading = false;\r\n            acceptedFiles.length = 0;\r\n            setFiles([])\r\n            setLoading(false)\r\n            setUploadTxt(\"Upload completed\")\r\n            setUploadComplete(true)\r\n        }else{\r\n            uploading = true;\r\n            var filename = Array.from(acceptedFiles)[upload_count].name;\r\n            var upload_task = mediaRef.child(new Date().getTime() +\"_\"+Array.from(acceptedFiles)[upload_count].name).put(acceptedFiles[upload_count]);\r\n            upload_task.then((snapshot) => {\r\n                handleUploadSuccess(snapshot.metadata, filename);\r\n            }).catch((error)=>{\r\n                console.log(error.message)\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    const onClickClear = () => {\r\n        acceptedFiles.length = 0;\r\n        setFiles([])\r\n    }\r\n\r\n    return(\r\n    \r\n    <Grid style={{ padding: 20 }}>\r\n        <Grid>\r\n            {loading ? null : <Grid {...getRootProps({style})}>\r\n                <input {...getInputProps()} />\r\n                <Typography variant=\"body2\">Drag 'n' drop some files here</Typography>\r\n                <Typography variant=\"body2\">or click to select files</Typography>\r\n            </Grid>}\r\n            <aside style={thumbsContainer}>\r\n                {thumbs}\r\n            </aside>\r\n        </Grid>\r\n        <Grid style={{ paddingBottom: 20  }}>\r\n            <Typography color=\"initial\" variant='caption'>\r\n            Image/Jpeg/jpg - Size below 1MB\r\n            </Typography>\r\n            <br/>\r\n            <Typography color=\"initial\" variant='caption'>\r\n            Video/Mp4 - Size below 20MB\r\n            </Typography>\r\n        </Grid>\r\n        {!loading ? <Grid>\r\n            <Button disabled={acceptedFiles.length > 0 ? false : true } onClick={onClickClear} variant=\"outlined\" color=\"primary\">\r\n                Clear\r\n            </Button>\r\n            <Button disabled={acceptedFiles.length > 0 ? false : true } disableElevation onClick={startUploadManually} variant=\"contained\" color=\"primary\" style={{ marginLeft:10 }}>\r\n                Upload\r\n            </Button>\r\n            <Typography color={uploadComplete ? \"initial\" : \"error\"} variant='caption' style={{ marginLeft: 20 }}>\r\n            {uploadTxt}\r\n            </Typography>\r\n        </Grid> :\r\n        <LinearProgress/>}\r\n    </Grid>)\r\n}\r\n  ","import React, { useEffect } from 'react';\r\nimport Table from '../../../modules/components/Table'\r\nimport Dropzone from '../../../modules/components/Dropzone'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Index(props) {\r\n\r\n    const [headCells, setHeadCells] = React.useState([]);\r\n    const [headMobileCells, setHeadMobileCells] = React.useState([]);\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n    const [searchCell, setSearchCell] = React.useState([]);\r\n    const [displayInfo, setDisplayInfo] = React.useState([]);\r\n    const [editCells, setEditCells] = React.useState([]);\r\n    const [excelList, setExcelList] = React.useState([]);\r\n    const matches = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n\r\n    useEffect(() => {\r\n\r\n        setHeadCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'size', numeric: true, disablePadding: false, label: 'Size' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'type', numeric: true, disablePadding: false, label: 'Type' },\r\n            { id: 'in_use', numeric: true, disablePadding: false, label: 'In Use' },\r\n        ])\r\n\r\n        setHeadMobileCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'size', numeric: true, disablePadding: false, label: 'Size' },\r\n        ])\r\n    \r\n        setSearchCell([\r\n            { id: 'id', label: 'Id' },\r\n            { id: 'name', label: 'Name' },\r\n        ])\r\n\r\n        setDisplayInfo([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'size', numeric: true, disablePadding: false, label: 'Size' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'type', numeric: true, disablePadding: false, label: 'Type' },\r\n            { id: 'in_use', numeric: true, disablePadding: false, label: 'In Use' },\r\n        ])\r\n\r\n        setExcelList([\r\n            { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n            { id: 'folder', numeric: false, disablePadding: false, label: 'Folder' },\r\n            { id: 'size', numeric: true, disablePadding: false, label: 'Size' },\r\n            { id: 'created', numeric: true, disablePadding: false, label: 'Created' },\r\n            { id: 'type', numeric: true, disablePadding: false, label: 'Type' },\r\n            { id: 'in_use', numeric: true, disablePadding: false, label: 'In Use' },\r\n        ])\r\n\r\n        setEditCells([\r\n            { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n        ])\r\n    \r\n        setSearchValue(\"name\")\r\n        \r\n    }, []);\r\n\r\n    return (\r\n    <Grid>\r\n        <Dropzone data=\"content\" folder={props.folder}/>\r\n        <Table \r\n            control={true}\r\n            excelList={excelList}\r\n            downloadExcel={false}\r\n            rowsPerPage={5}\r\n            orderBy=\"created\" \r\n            data=\"content\" \r\n            folder_data=\"content_folder\"\r\n            folder={props.folder}\r\n            displayInfo={displayInfo}\r\n            matches={matches}\r\n            editCells={editCells}\r\n            headCells={matches ? headCells : headMobileCells} \r\n            searchValue={searchValue} \r\n            searchCell={searchCell}/>\r\n    </Grid>\r\n    )\r\n    \r\n}\r\n  "],"sourceRoot":""}